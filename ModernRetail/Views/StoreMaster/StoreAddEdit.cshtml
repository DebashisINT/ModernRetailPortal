
@using System.Web.UI.WebControls
@using DevExpress.Web;
@using DevExpress.Web.Mvc;


@model ModernRetail.Models.StoreMasterModel
@{
    ViewBag.Title = "LOGIN CONFIGURATION";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<title>Store Master</title>
<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>

<link href="~/assests/pluggins/LightBox/lightbox.css" rel="stylesheet" />
<script src="~/assests/pluggins/LightBox/lightbox.js"></script>

<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
<link href="~/Content/media.css" rel="stylesheet" />
<script src="~/Scripts/SearchPopup.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>


<style>
    #grid .dxgvHSDC > div, #grid .dxgvCSD {
        width: 100% !important;
    }

    .hide {
        display: none;
    }

    .full-grid, #grid {
        width: 100% !important;
    }

    #gridLevelEntryList, #gridLevelEntryList > tbody > tr > td > div.dxgvHSDC > div {
        width: 100% !important;
    }

    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: white !important;
    }
</style>
<style>
    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: #fff;
    }

    .dxgvStatusBar_PlasticBlue {
        display: none;
    }

    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }


    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 33px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*font-weight: 500;*/
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        /*background: #094e8c !important;
    background-image: none !important;*/
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        /*color: #fff;*/
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    /*.pmsModal .modal-header .modal-title {
        font-size: 14px;
    }*/

    .pmsModal .modal-header .modal-title {
        font-size: 16px !important;
        color: #111;
        font-size: 24px;
    }

    .pmsModal .modal-header {
        background: transparent !important;
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .close {
        font-size: 34px;
        opacity: .8;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 34px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
        margin-right: 5px;
    }

        .show-btn:hover {
            background: #072743;
        }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #a24716 !important;
            color: #fff;
        }

    .swal2-confirm.swal2-styled {
        border-radius: 8px !important;
    }

    .swal2-styled {
        border-radius: 12px !important;
        padding: 8px 20px !important;
        color: #fff !important;
        font-size: 14px !important;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
        width: 90px !important;
        border-radius: 8px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 50%) !important;
    }

    div:where(.swal2-container).swal2-center > .swal2-popup {
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 42%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*overflow: visible;*/
    }

    .save-btn .btn-icon, .cancel-catg .btn-icon, .saveicon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        .save-btn .btn-icon img, .saveicon img {
            color: #238945;
            width: 14px;
        }



    .cancel-catg, .save-btn {
        transition: all .3s ease-in-out;
    }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

        .cancel-catg:hover {
            transform: scale(1.1);
        }

        .save-btn:hover {
            transform: scale(1.1);
        }

    .modal-footer .btn + .btn {
        margin-bottom: 0;
        margin-left: 5px;
    }

    .cancel-catg {
        margin-right: 5px;
    }

    .close:hover, .close:focus {
        color: #111 !important;
    }

    #NEWVISIT, #REVISIT, #ORDERAMOUNT, #COLLECTION, #ORDERQTY {
        padding: 0;
    }

        #NEWVISIT input, #REVISIT input, #ORDERAMOUNT input, #COLLECTION input, #ORDERQTY input {
            height: 100%;
            padding: 0 5px;
        }

    table.dataTable thead th {
        padding: 6px 9px;
    }

    .dxgvControl_PlasticBlue a {
        margin: 5px 3px;
        display: inline-block;
    }

    .pmsModal .modal-body {
        padding: 10px 20px;
    }

    .pmsModal .modal-footer {
        padding: 10px 20px;
    }

    .dataTables_length label {
        display: flex;
        align-items: center;
    }

    .dataTables_filter input {
        /*display: block;*/
        width: 60%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555;
        vertical-align: middle;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .dataTables_length select {
        margin-left: 5px;
        margin-right: 5px;
    }


    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0;
    }

    .pagination > li > a, .pagination > li > span {
        padding: 4px 8px;
    }

    div.dataTables_wrapper div.dataTables_info {
        padding-top: 10px;
    }

    .crossBtnN {
        color: #fff;
        cursor: pointer;
    }

    div.dataTables_wrapper div.dataTables_info {
        font-size: 12px;
    }

    #GridLevellistModel .modal-dialog {
        width: 45%;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        outline: none;
        border: none;
    }

    .dynamicPopupTbl > tbody > tr > td input {
        width: 100%;
        white-space: break-spaces;
    }

    #PartyTypeGridLookup_ET > tbody > tr > td: first - child {
        display: none;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: none; /* Initially hidden */
    }

    .flex-loader {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        width: 100%;
        height: 100%;
    }

    .dxgvLoadingPanel_PlasticBlue {
        display: none !important;
    }

    .flex-loader img {
        width: 120px;
    }

    .flex-loader h4 {
        font-size: 22px;
        color: #000000;
    }

    .save-btn .btn-icon, .cancel-catg .btn-icon, .saveicon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        .save-btn .btn-icon img, .saveicon img {
            color: #238945;
            width: 14px;
        }

    .cancel-catg, .save-btn {
        transition: all .3s ease-in-out;
    }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

        .cancel-catg:hover {
            transform: scale(1.1);
        }

        .save-btn:hover {
            transform: scale(1.1);
        }
</style>

<link href="/Scripts/pluggins/multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Scripts/pluggins/multiselect/bootstrap-multiselect.js"></script>

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.0/js/dataTables.fixedColumns.min.js"></script>
@*<script src="/Scripts/SearchPopupDatatable.js"></script>*@
<link href="/assests/css/SearchPopup.css" rel="stylesheet" />


<style>
    #ddlBranch + div ul.multiselect-container {
        max-height: 250px;
        overflow-y: auto;
    }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .multiselect-container.dropdown-menu {
        right: 0 !important;
        left: auto;
        min-width: 275px;
    }

    .iminentSpan .multiselect-container.dropdown-menu {
        right: auto !important;
        left: 0;
        min-width: 340px;
        margin-top: -12px;
    }

    .multiselect-container > li > a {
        padding: 5px 0;
    }

        .multiselect-container > li > a input[type="checkbox"] {
            transform: translateY(3px);
        }

    .multiselect-container > li.active > a {
        background: transparent !important;
        color: #333;
    }

        .multiselect-container > li > a:hover, .multiselect-container > li.active > a:hover {
            background: #f3f3f3 !important;
            color: #333 !important;
        }

    .multiselect-item.multiselect-filter {
        padding-bottom: 6px;
        border-bottom: 1px solid #ccc;
    }

        .multiselect-item.multiselect-filter .form-control.multiselect-search {
            height: 32px;
        }

        .multiselect-item.multiselect-filter .input-group-addon {
            background: #41a8f1;
            color: #fff;
            border-color: #41a8f1;
        }

    .input-group-btn .multiselect-clear-filter {
        background: #f98181;
        color: #fffefe;
        /* box-shadow: none; */
        text-shadow: none;
        border-color: #f96a6a;
        padding: 5px 10px 4px 10px;
    }

    .multiselect.dropdown-toggle {
        background: #fff;
        border-radius: 5px;
        border: 1px solid #b7b7b7;
        /*margin-bottom: 12px;*/
    }

    #ReportToModel label {
        font-weight: 500;
        margin-top: 5px;
    }

    #ReportToModel label {
        margin-top: 8px;
        font-size: 13px;
        margin-bottom: 2px;
    }

    #ddlBranch button, .multiselect.dropdown-toggle {
        color: #111 !important;
    }

        .multiselect.dropdown-toggle, .multiselect.dropdown-toggle:hover {
            z-index: 1;
            background: transparent;
        }

    .dataTables_length label {
        display: flex;
        align-items: center;
    }

    .dataTables_filter input {
        /*display: block;*/
        width: 60%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555;
        vertical-align: middle;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .dataTables_length select {
        margin-left: 5px;
        margin-right: 5px;
    }


    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0;
    }

    .pagination > li > a, .pagination > li > span {
        padding: 4px 8px;
    }

    div.dataTables_wrapper div.dataTables_info {
        padding-top: 10px;
    }

    .crossBtnN {
        color: #fff;
        cursor: pointer;
    }

    div.dataTables_wrapper div.dataTables_info {
        font-size: 12px;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        outline: none;
        border: none;
    }

    .dataTables_length {
        padding-top: 0;
    }

    table.dataTable thead th, table.dataTable thead td {
        padding-left: 10px !important;
    }

    .dynamicPopupTbl > tbody > tr > td, .dynamicPopupTbl > tbody > tr > td input {
        font-family: 'Poppins', sans-serif !important;
    }

    .dynamicPopupTbl {
        background: #fff;
    }

        .dynamicPopupTbl > tbody > tr > td:hover {
            background: #f6f6f6;
        }


    input:focus, textarea:focus, select:focus {
        outline: none;
    }

    .select2-container {
        width: 100% !important;
        z-index: 99999;
    }

    .select2-container--default .select2-selection--single {
        height: 34px;
        /* padding: 6px 12px; */
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    /*.select2-container {
        z-index: 1;
    }*/

    .select2-container--default .select2-selection--single {
        background-color: transparent;
    }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            display: none;
        }

    .select2-container--default .select2-search--dropdown .select2-search__field {
        border-radius: 4px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 32px;
        padding-right: 22px;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        z-index: 99999;
    }

    .dropdown-menu, .modal {
        z-index: 999999;
    }

    .multiselect.dropdown-toggle {
        width: 100% !important;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .btn-group {
        width: 100%;
    }

    .General-part {
        border: 1px solid #0d8f24;
        border-radius: 10px;
        background: #f5fff7;
        position: relative;
        padding-top: 25px;
        padding-bottom: 10px;
        margin-bottom: 30px;
    }

    .store-info {
        border: 1px solid #610d8f;
        border-radius: 10px;
        background: #fbf3ff;
        position: relative;
        padding-top: 25px;
        padding-bottom: 10px;
        margin-bottom: 30px;
    }

    .contact-info {
        border: 1px solid #075c7c;
        border-radius: 10px;
        background: #f6fdff;
        position: relative;
        padding-top: 25px;
        padding-bottom: 15px;
        margin-bottom: 30px;
    }

    .backBox {
        padding-left: 30px !important;
        padding-right: 30px !important;
        padding-top: 30px !important;
    }

    .General-part-title {
        padding: 5px 24px;
        border-radius: 50px;
        background: #0d8f24;
        color: #fff;
        font-size: 17px;
        display: block;
        position: absolute;
        top: -35px;
        left: 15px;
        font-weight: 500;
    }

    .store-info-title {
        padding: 5px 24px;
        border-radius: 50px;
        background: #610d8f;
        color: #fff;
        font-size: 17px;
        display: block;
        position: absolute;
        top: -35px;
        left: 15px;
        font-weight: 500;
    }

    .contact-info-title {
        padding: 5px 24px;
        border-radius: 50px;
        background: #075c7c;
        color: #fff;
        font-size: 17px;
        display: block;
        position: absolute;
        top: -35px;
        left: 15px;
        font-weight: 500;
    }

    .cust-dropdown {
        background: #fff;
    }

    .col-md-3, .col-md-6 {
        margin-bottom: 10px;
    }

    @@media only screen and (max-width: 768px) {
        #ddlAppIds .tooltip {
            display: none;
        }

        #ReportToTxt {
            width: 100% !important;
        }

        #btnReportToSearch {
            display: inline-block;
            position: absolute;
            right: 0;
            border-radius: 0 7px 7px 0;
        }
    }
</style>

<script>
    $(document).ready(function () {
        GETPIN();


        $('#ddlPIN').select2({
            placeholder: "Select",
            allowClear: false
        });

        $('#ddlBranch').select2({
            placeholder: "Select",
            allowClear: false
        });

        $('#ddlStoreType').select2({
            placeholder: "Select",
            allowClear: false
        });

        $('#UserSearchModel').on('shown.bs.modal', function () {
            $('#txtUserSearch').focus();
        })
        $('#OldUserSearchModel').on('shown.bs.modal', function () {
            $('#txtOldUserSearch').focus();
        })

    });


    var ID = 0;
    var urlKeys = getUrlVars();
    function CloseAdd() {
        window.location.href = '/StoreMaster/Index';
    }

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

     function GETPIN() {
         $.ajax({
             type: "POST",
             url: "@Url.Action("GetPIN", "StoreMaster")",
             async: false,
             success: function (response) {
                 $('#ddlPIN').html('');
                 var html = "";
                 for (var i = 0; i < response.length; i++) {
                     html = html + "<option value='" + response[i].pin_id + "'>" + response[i].pin_code + "</option>";
                 }
                 $('#ddlPIN').html(html);
             }
         });
     }

     function PINChange(){
         $.ajax({
             type: "post",
             url: "@Url.Action("GetCountryStateCity", "StoreMaster")",
             data: { PIN: $('#ddlPIN').val() },
             datatype: "json",
             traditional: true,
             success: function (data) {
                 if (data.length > 0) {
                     $("#txtCountry").val(data[0].CountryName);
                     $("#txtState").val(data[0].StateName);
                     $("#txtCity").val(data[0].CityName);
                     $("#hdnStateId").val(data[0].StateId);
                 }

             }
         });


     }

     function Userkeydown(e) {
         var OtherDetails = {}
         if ($.trim($("#txtUserSearch").val()) == "" || $.trim($("#txtUserSearch").val()) == null) {
             return false;
         }
         OtherDetails.SearchKey = $("#txtUserSearch").val();

         if (e.code == "Enter" || e.code == "NumpadEnter") {
             var HeaderCaption = [];
             HeaderCaption.push("User Name");
             HeaderCaption.push("User Login Id");


             if ($("#txtUserSearch").val() != "") {
                 callonServer("../../../Models/MRService.asmx/GetUserList", OtherDetails, "UserTable", HeaderCaption, "UserIndex", "SetUser");
             }
         }
         else if (e.code == "ArrowDown") {
             if ($("input[UserIndex=0]"))
                 $("input[UserIndex=0]").focus();
         }
     }

     function SetUser(id, Name) {
         var key = id;
         $('#hdnUserID').val(id)
         if (key != null && key != '') {
             $('#UserSearchModel').modal('hide');
             UserTxt.SetText(Name);
             UserTxt.SetFocus();
         }
     }

     function UserButnClick(s, e) {
         $('#UserSearchModel').modal('show');
     }

     function User_KeyDown(s, e) {
         if (e.htmlEvent.key == "Enter" || e.code == "NumpadEnter") {
             $('#UserSearchModel').modal('show');
             $("#txtUserSearch").focus();
         }
     }

     function OldUserkeydown(e) {
         var OtherDetails = {}
         if ($.trim($("#txtOldUserSearch").val()) == "" || $.trim($("#txtOldUserSearch").val()) == null) {
             return false;
         }
         OtherDetails.SearchKey = $("#txtOldUserSearch").val();

         if (e.code == "Enter" || e.code == "NumpadEnter") {
             var HeaderCaption = [];
             HeaderCaption.push("User Name");
             HeaderCaption.push("User Login Id");

             if ($("#txtOldUserSearch").val() != "") {
                 callonServer("../../../Models/MRService.asmx/GetUserList", OtherDetails, "OldUserTable", HeaderCaption, "OldUserIndex", "SetOldUser");
             }
         }
         else if (e.code == "ArrowDown") {
             if ($("input[UserIndex=0]"))
                 $("input[UserIndex=0]").focus();
             else if ($("input[OldUserIndex=0]"))
                 $("input[OldUserIndex=0]").focus();
         }
     }

     function SetOldUser(id, Name) {
         var key = id;
         $('#hdnOldUserID').val(id)
         if (key != null && key != '') {
             $('#OldUserSearchModel').modal('hide');
             OldUserTxt.SetText(Name);
             OldUserTxt.SetFocus();
         }
     }

     function OldUserButnClick(s, e) {
         $('#OldUserSearchModel').modal('show');
     }

     function OldUser_KeyDown(s, e) {
         if (e.htmlEvent.key == "Enter" || e.code == "NumpadEnter") {
             $('#OldUserSearchModel').modal('show');
             $("#txtOldUserSearch").focus();
         }
     }

     function ClearData() {
         $("#hdnstoreMode").val('Add');
         $("#hdnStoreCode").val('');
         $("#myModalLabel").val("Add Store");
         $("#ddlPIN").val(0).trigger('change');
         $("#ddlBranch").val(0).trigger('change');
         $("#ddlStoreType").val(0).trigger('change');
         $("#ddlStatus").val(1).trigger('change');

         $("#txtCountry").val('');
         $("#txtState").val('');
         $("#txtCity").val('');
         $("#hdnStateId").val(0);

         $("#txtStoreName").val('');
         $("#txtAddress").val('');
         //$("#txtPinCode").val('');
         $("#txtArea").val('');
         $("#txtLocationLat").val('');
         $("#txtLocationLang").val('');
         $("#txtRemarks").val('');
         $("#txtContactName").val('');
         $("#txtContactNo").val('');
         $("#txtAlternateContact").val('');
         $("#txtWhatsappNumber").val('');
         $("#txtEmail").val('');

         $('#hdnUserID').val('0')
         UserTxt.SetText('');
         $('#hdnOldUserID').val('0')
         OldUserTxt.SetText('');

         $("#uploadFile").val('');

     }

     function AddStore(values) {

         //$("#loading-overlay").show();

         ID = urlKeys.key;

         if ($("#ddlPIN").val() == "0" || $("#ddlPIN").val() == "") {
             //$("#loading-overlay").hide();
             //jAlert("Please select PIN.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#ddlPIN").focus();
             //        return
             //    }, 200);
             //});

             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter PIN to proceed'
             });

             return
         }

         if ($("#ddlBranch").val() == "0" || $("#ddlBranch").val() == "") {
             //$("#loading-overlay").hide();
             //jAlert("Please select Branch.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#ddlBranch").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Branch to proceed'
             });
             return
         }

         if ($("#txtStoreName").val() == "" || $("#txtStoreName").val() == null || $("#txtStoreName").val() == undefined) {
             //$("#loading-overlay").hide();
             //jAlert("Please enter Store Name.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#txtStoreName").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Store Name to proceed'
             });
             return
         }

         if ($("#txtAddress").val() == "" || $("#txtAddress").val() == null || $("#txtAddress").val() == undefined) {
             //$("#loading-overlay").hide();
             //jAlert("Please enter Address.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#txtAddress").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Address to proceed'
             });
             return
         }

         
         if ($("#ddlStatus").val() == "Select") {
             //$("#loading-overlay").hide();
             //jAlert("Please select Status.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#ddlStatus").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Status to proceed'
             });
             return
         }

         if ($("#ddlStoreType").val() == "0") {
             //$("#loading-overlay").hide();
             //jAlert("Please select Store Type.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#ddlStoreType").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Store Type to proceed'
             });
             return
         }

         if ($("#hdnUserID").val() == "0" || $("#hdnUserID").val()=="") {
             //$("#loading-overlay").hide();
             //jAlert("Please select Store Type.", "Alert", function () {
             //    setTimeout(function () {
             //        $("#ddlStoreType").focus();
             //        return
             //    }, 200);
             //});
             Swal.fire({
                 icon: 'warning',
                 title: 'Sorry!',
                 text: 'Please Enter Assign To to proceed'
             });
             return
         }

         var mail = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
         if ($("#txtEmail").val() != "") {
             if (!mail.test($("#txtEmail").val().trim())) {
                 //$("#loading-overlay").hide();
                 //jAlert("Please Enter Valid Email.", "Alert", function () {
                 //    setTimeout(function () {
                 //        $("#txtEmail").focus();
                 //        return
                 //    }, 200);
                 //});
                 Swal.fire({
                     icon: 'warning',
                     title: 'Sorry!',
                     text: 'Please Enter Valid Email to proceed'
                 });
                 return
             }
         }

         if (window.FormData !== undefined)
         {
             var fileUpload = $("#uploadFile").get(0);
             var files = fileUpload.files;
             var fileData = new FormData();

             for (var i = 0; i < files.length; i++) {
                 fileData.append('shop_image', files[i]);
             }



             if (fileUpload.files.length > 0)
             {

                 var isprocess = false;
                 var extension = $("#uploadFile").val().replace(/^.*\./, '');
                 switch (extension.toLowerCase())
                 {
                     case 'jpg':
                         isprocess = true;
                     case 'jpeg':
                         isprocess = true;
                     case 'png':
                         isprocess = true;
                     case 'gif':
                         isprocess = true;
                     default:
                         // Cancel the form submission
                         if (!isprocess)
                         {
                             jAlert('Invalid file.');
                             return false;
                             return
                         }
                 }
                 if ($("#uploadFile").get(0).files[0].size / 1024 / 1024 > 1) {
                     jAlert('File size upto 1 MB.');
                     return false;
                     return
                 }
             }

             var data =
             {
                 store_id: ID,
                 store_name: $("#txtStoreName").val(),
                 store_address: $("#txtAddress").val(),
                 store_pincode: $("#ddlPIN option:selected").text(),
                 store_branch: $('#ddlBranch option:selected').val(),
                 store_status: $("#ddlStatus").val(),
                 store_lat: $("#txtLocationLat").val(),
                 store_long: $("#txtLocationLang").val(),
                 store_contact_name: $("#txtContactName").val(),
                 store_contact_number: $("#txtContactNo").val(),
                 store_alternet_contact_number: $("#txtAlternateContact").val(),
                 store_whatsapp_number: $("#txtWhatsappNumber").val(),
                 store_email: $("#txtEmail").val(),
                 store_type: $("#ddlStoreType").val(),
                 store_size_area: $("#txtArea").val(),
                 store_state_id: $("#hdnStateId").val(),
                 remarks: $("#txtRemarks").val(),
                 create_date_time: "",
                 created_userid: $('#hdnUserID').val(),
                 created_userid_old: $('#hdnOldUserID').val()

             }

             //if ($("#hdnStoreMode").val() == 'Edit') {
             //    add_url = "@Url.Action("EditStore", "StoreMaster")";
             //}
             //else {
             //    add_url = "@Url.Action("AddStore", "StoreMaster")";
             //}

             $("#loading-overlay").show();

             add_url = "@Url.Action("AddStore", "StoreMaster")";

             var model = new FormData();
             var i = 0;//selected file index
             model.append("shop_image", files[0]);
             model.append("data", JSON.stringify(data));

             $.ajax({
                // and other parameter is set here
                url: add_url,
                      async: false,
                      data: { data: data },
                      type: 'POST',
                   }).always(function (result1){
                   if (result1 == '1' || result1 == '2')
                   {

                     // IF STORE IMAGE IS GIVEN
                     if (fileUpload.files.length > 0)
                     {
                          add_photo_url = "@Url.Action("AddStoreImage", "StoreMaster")";

                          var model = new FormData();
                          var i = 0;//selected file index
                          model.append("store_image", files[0]);
                          //model.append("store_id", data);


                          $.ajax({
                          // and other parameter is set here
                                  url: add_photo_url,
                                  type: "POST",
                                  data: model,
                                  dataType: "json",
                                  cache: false,
                                  contentType: false,
                                  processData: false
                              }).always(function (result) {
                                  if (result == 'OK')
                                  {
                                      $("#loading-overlay").hide();

                                      //Swal.fire({
                                      //    icon: 'success',
                                      //    title: 'Success',
                                      //    text: result1 == '1' ? "Store added successfully." : "Store updated successfully."
                                      //});


                                      Swal.fire({
                                          title: 'Success!',
                                          icon: 'success',
                                          text: result1 == '1' ? "Store added successfully." : "Store updated successfully.",
                                          confirmButtonText: 'OK'
                                      }).then((result) => {
                                          if (result.isConfirmed) {
                                              setTimeout(function () {
                                                  var url = '/StoreMaster/Index';
                                                  window.location.href = url;
                                              }, 500);
                                          }
                                      });
                              }
                          });
                      }
                      else
                     {
                         $("#loading-overlay").hide();

                         Swal.fire({
                             title: 'Success!',
                             icon: 'success',
                             text: result1 == '1' ? "Store added successfully." : "Store updated successfully.",
                             confirmButtonText: 'OK'
                         }).then((result) => {
                             if (result.isConfirmed) {
                                 setTimeout(function () {
                                     var url = '/StoreMaster/Index';
                                     window.location.href = url;
                                 }, 500);
                             }
                         });

                      }


                     }
                     else
                     {
                       $("#loading-overlay").hide();

                       if (result1 == '1') {
                           jAlert("Error in Store added.");
                       }
                       else {
                           jAlert("Error in update.");
                       }
                       }


                });

         }
         else
         {

              jAlert("Please try again later!");
         }

     }

     function OpenStoreImage(imgfile) {

         $('.image').attr({
             'src': imgfile
         });
         $('#mask').addClass('showing');
     }

</script>

<script>
    if (urlKeys.key != 'Add')
    {
        ID = urlKeys.key;
        $("#hdnStoreCode").val(ID);
        $("#hdnstoreMode").val('Edit');

        if (ID != null) {

            $.ajax({
                type: "POST",
                url: "@Url.Action("EditStore", "StoreMaster")",
                data: { store_id: ID },
                success: function (response) {
                    if (response.code == "") {
                        jAlert('No data found');
                    }
                    else
                    {
                        $("#myModalLabel").val("Edit Store");

                        $("#txtStoreName").val(response.store_name);
                        $("#txtAddress").val(response.store_address);

                        GETPIN();
                        $("#ddlPIN").val(response.store_pincode).trigger('change');

                        $("#txtCountry").val(response.CountryName);
                        $("#txtState").val(response.StateName);
                        $("#txtCity").val(response.CityName);

                        $("#txtLocationLat").val(response.store_lat);
                        $("#txtLocationLang").val(response.store_long);
                        $("#txtContactName").val(response.store_contact_name);
                        $("#txtContactNo").val(response.store_contact_number);
                        $("#txtAlternateContact").val(response.store_alternet_contact_number);
                        $("#txtWhatsappNumber").val(response.store_whatsapp_number);
                        $("#txtEmail").val(response.store_email);
                        $("#ddlStoreType").val(response.store_type).trigger('change');
                        $("#txtArea").val(response.store_size_area);
                        $("#hdnStateId").val(response.store_state_id);
                        $("#txtRemarks").val(response.remarks);
                        $("#ddlBranch").val(response.store_branch).trigger('change');
                        $("#ddlStatus").val(response.store_status).trigger('change');


                        $('#hdnUserID').val(response.created_userid)
                        UserTxt.SetText(response.created_username);
                        $('#hdnOldUserID').val(response.created_userid_old)
                        OldUserTxt.SetText(response.created_useridname_old);

                        //$("#uploadFile").val(response.store_pic_url);

                        //$("#myModal").modal('show');
                    }
                }
            });


        }


    }
</script>

<div class="breadCumb">
    <span id="HeaderLableID">Store Master</span>
    <div id="ApprovalCross" onclick="CloseAdd()" class="crossBtnN"><i class="fa fa-times"></i></div>
</div>

<div class="overlay" id="loading-overlay">
    <div class="flex-loader">
        <img src="/assests/images/new-loader.gif" />
        <h4>Data is loading, Please Wait</h4>
    </div>

</div>

<div class="container">
    <div class="form_main backBox p-3 mb-3">
        <div class="row mb-3">


            <div class="General-part">
                <h3 class="General-part-title">General</h3>

                <div class="col-md-3 h-branch-select">
                    <label>PIN <span class="red">*</span></label>
                    <div class="cust-dropdown">
                        @* @Html.DropDownListFor(m => m.Pin, new SelectList(Model.PinList, "pin_id", "pin_code", Model.PinID), new { @id = "ddlPIN", @class = "form-control", @onchange = "PINChange();" })*@
                        <select id="ddlPIN" class="form-control" onchange="PINChange()"></select>
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Country <span class="red">*</span></label>
                    <div>
                        @Html.TextBoxFor(m => m.Country, new { @class = "form-control", @id = "txtCountry", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>State <span class="red">*</span></label>
                    <div>
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control", @id = "txtState", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>City <span class="red">*</span></label>
                    <div>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", @id = "txtCity", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-sm-3 mb-3 h-branch-select">
                    <label>Branch<span style="color:red">*</span></label>
                    <div class="cust-dropdown">
                        @Html.DropDownListFor(m => m.Branch, new SelectList(Model.BranchList, "ID", "NAME", Model.BranchID), new { @id = "ddlBranch", @class = "form-control" }
                    )
                    </div>
                </div>


                    <div class="clear"></div>
                </div>

            <div class="store-info">
                <h3 class="store-info-title">Store Info</h3>

                <div class="col-md-3">
                    <label>Store Name <span class="red">*</span></label>
                    <div>
                        @Html.TextBoxFor(m => m.Store_Name, new { @class = "form-control", @id = "txtStoreName" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Address <span class="red">*</span></label>
                    <div>
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @id = "txtAddress" })
                    </div>
                </div>

                <div class="col-md-3 h-branch-select">
                    <label>Status <span class="red">*</span></label>
                    <div class="cust-dropdown">
                        <select class="form-control" id="ddlStatus">
                            <option value="Select">Select</option>
                            <option value="1">Active</option>
                            <option value="0">Inactive</option>
                        </select>
                    </div>
                </div>

                <div class="clear"></div>

                <div class="col-md-3 h-branch-select">
                    <label>Store Type <span class="red">*</span></label>
                    <div class="cust-dropdown">
                        @Html.DropDownListFor(m => m.StoreType, new SelectList(Model.StoreTypeList, "storetype_id", "storetype_name", Model.StoreTypeId), new { @id = "ddlStoreType", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <label>Area</label>
                    <div>
                        @Html.TextBoxFor(m => m.Area, new { @class = "form-control", @id = "txtArea" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Location Lat </label>
                    <div>
                        @Html.TextBoxFor(m => m.location_lat, new { @class = "form-control allow_decimal numbersOnly", @id = "txtLocationLat" })
                    </div>
                </div>
                <div class="col-md-3">
                    <label>Location Long</label>
                    <div>
                        @Html.TextBoxFor(m => m.location_long, new { @class = "form-control allow_decimal numbersOnly", @id = "txtLocationLang" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Remarks</label>
                    <div>
                        @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control", @id = "txtRemarks" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Assign to User <span class="red">*</span></label>
                    <div>
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "UserTxt";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.AssignedTo;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){UserButnClick(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){User_KeyDown(s,e);}";

                        }).GetHtml()

                        <input type="hidden" id="hdnUserID" value="@Model.NewUserid">
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Old Assigned User</label>
                    <div>
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "OldUserTxt";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.AssignedTo;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OldUserButnClick(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){OldUser_KeyDown(s,e);}";

                        }).GetHtml()

                        <input type="hidden" id="hdnOldUserID" value="@Model.OldUserid">
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Add Photo</label>
                    <input type="file" id="uploadFile" accept=".jpg, .jpeg, .png, .gif" class="form-control" />
                    <span class="red">
                        Accepts .jpg, .jpeg, .png, .gif upto 1 MB
                    </span>
                </div>

                <div class="clear"></div>
            </div>


            <div class="contact-info">
                <h3 class="contact-info-title">Contact Info</h3>

                <div class="col-md-3">
                    <label>Contact Name</label>
                    <div>
                        @Html.TextBoxFor(m => m.contact_name, new { @class = "form-control", @id = "txtContactName" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Contact No.</label>
                    <div>
                        @Html.TextBoxFor(m => m.contact_no, new { @class = "form-control numbersOnly", @id = "txtContactNo", @MaxLength = "10" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Alternate Contact </label>
                    <div>
                        @Html.TextBoxFor(m => m.Alternate_Contact, new { @class = "form-control numbersOnly", @id = "txtAlternateContact", @MaxLength = "10" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Whatsapp Number </label>
                    <div>
                        @Html.TextBoxFor(m => m.Whatsapp_Number, new { @class = "form-control numbersOnly", @id = "txtWhatsappNumber", @MaxLength = "10" })
                    </div>
                </div>

                <div class="col-md-3">
                    <label>Email </label>
                    <div>
                        @Html.TextBoxFor(m => m.owner_email, new { @class = "form-control", @id = "txtEmail" })
                    </div>
                </div>


                <div class="clear"></div>
            </div>

            <div class="clear"></div>
            <div class="clear"></div>

            <div class=" px-4 text-center">
                @if (Convert.ToInt16(ViewBag.IsView) == 0 || Convert.ToInt16(ViewBag.IsView) == 4)
                {
                    <button type="button" class="btn btn-success save-btn mr-3" onclick="AddStore('Exit');"><span class="btn-icon"><img src="../../../assests/images/save-instagram.svg"></span> Save & Exit</button>
                }
                <button type="button" class="btn btn-danger cancel-catg" data-dismiss="modal" onclick="ClearData();"><span class="btn-icon"><img src="../../../assests/images/cancel.svg"></span> Cancel & Exit</button>

            </div>
        </div>
    </div>

</div>



<input type="hidden" id="hdnstoreMode" />
<input type="hidden" id="hdnStateId" />
<input type="hidden" id="hdnStoreCode" />

<!--User List-->
<div class="modal fade pmsModal w70" id="UserSearchModel" role="dialog">
    <div class="modal-dialog w-50">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">User Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control mb-3" onkeydown="Userkeydown(event)" id="txtUserSearch" autofocus style="width:100%" placeholder="Search By User Name or User Login Id or Employee Id" />
                <div id="UserTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>User Name</th>
                            <th>User Login Id</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--User List-->
<!--Old User List-->
<div class="modal fade pmsModal w70" id="OldUserSearchModel" role="dialog">
    <div class="modal-dialog w-50">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Old User Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control mb-3" onkeydown="OldUserkeydown(event)" id="txtOldUserSearch" autofocus style="width:100%" placeholder="Search By User Name or User Login Id or Employee Id" />
                <div id="OldUserTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>User Name</th>
                            <th>User Login Id</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--Old User List-->
