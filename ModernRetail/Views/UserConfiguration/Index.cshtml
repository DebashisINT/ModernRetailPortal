
@using System.Web.UI.WebControls
@using DevExpress.Web;
@using DevExpress.Web.Mvc;


@model ModernRetail.Models.UserMasterModel
@{
    ViewBag.Title = "USER CONFIGURATION";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/cultures/globalize.cultures.js"></script>

<link href="~/assests/pluggins/LightBox/lightbox.css" rel="stylesheet" />
<script src="~/assests/pluggins/LightBox/lightbox.js"></script>

<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>
<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
<link href="~/Content/media.css" rel="stylesheet" />
<script src="~/Scripts/SearchPopup.js"></script>
<script src="~/Scripts/SearchMultiPopup.js"></script>


<style>
    #grid .dxgvHSDC > div, #grid .dxgvCSD {
        width: 100% !important;
    }

    .hide {
        display: none;
    }

    .full-grid, #grid {
        width: 100% !important;
    }

    #gridLevelEntryList, #gridLevelEntryList > tbody > tr > td > div.dxgvHSDC > div {
        width: 100% !important;
    }

    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: white !important;
    }
</style>
<style>
    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: #fff;
    }

    .dxgvStatusBar_PlasticBlue {
        display: none;
    }

    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }


    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 33px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*font-weight: 500;*/
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        /*background: #094e8c !important;
    background-image: none !important;*/
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        /*color: #fff;*/
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    /*.pmsModal .modal-header .modal-title {
        font-size: 14px;
    }*/

    .pmsModal .modal-header .modal-title {
        font-size: 16px !important;
        color: #111;
        font-size: 24px;
    }

    .pmsModal .modal-header {
        background: transparent !important;
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .close {
        font-size: 34px;
        opacity: .8;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 34px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
        margin-right: 5px;
    }

        .show-btn:hover {
            background: #072743;
        }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #a24716 !important;
            color: #fff;
        }

    .swal2-confirm.swal2-styled {
        border-radius: 8px !important;
    }

    .swal2-styled {
        border-radius: 12px !important;
        padding: 8px 20px !important;
        color: #fff !important;
        font-size: 14px !important;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
        width: 90px !important;
        border-radius: 8px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 50%) !important;
    }

    div:where(.swal2-container).swal2-center > .swal2-popup {
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 42%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*overflow: visible;*/
    }

    .save-btn .btn-icon, .cancel-catg .btn-icon, .saveicon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        .save-btn .btn-icon img, .saveicon img {
            color: #238945;
            width: 14px;
        }



    .cancel-catg, .save-btn {
        transition: all .3s ease-in-out;
    }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

        .cancel-catg:hover {
            transform: scale(1.1);
        }

        .save-btn:hover {
            transform: scale(1.1);
        }

    .modal-footer .btn + .btn {
        margin-bottom: 0;
        margin-left: 5px;
    }

    .cancel-catg {
        margin-right: 5px;
    }

    .close:hover, .close:focus {
        color: #111 !important;
    }

    #NEWVISIT, #REVISIT, #ORDERAMOUNT, #COLLECTION, #ORDERQTY {
        padding: 0;
    }

        #NEWVISIT input, #REVISIT input, #ORDERAMOUNT input, #COLLECTION input, #ORDERQTY input {
            height: 100%;
            padding: 0 5px;
        }

    table.dataTable thead th {
        padding: 6px 9px;
    }

    .dxgvControl_PlasticBlue a {
        margin: 5px 3px;
        display: inline-block;
    }

    .pmsModal .modal-body {
        padding: 10px 20px;
    }

    .pmsModal .modal-footer {
        padding: 10px 20px;
    }

    .dataTables_length label {
        display: flex;
        align-items: center;
    }

    .dataTables_filter input {
        /*display: block;*/
        width: 60%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555;
        vertical-align: middle;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .dataTables_length select {
        margin-left: 5px;
        margin-right: 5px;
    }


    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0;
    }

    .pagination > li > a, .pagination > li > span {
        padding: 4px 8px;
    }

    div.dataTables_wrapper div.dataTables_info {
        padding-top: 10px;
    }

    .crossBtnN {
        color: #fff;
        cursor: pointer;
    }

    div.dataTables_wrapper div.dataTables_info {
        font-size: 12px;
    }

    #GridLevellistModel .modal-dialog {
        width: 45%;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        outline: none;
        border: none;
    }

    .dynamicPopupTbl > tbody > tr > td input {
        width: 100%;
        white-space: break-spaces;
    }

    #PartyTypeGridLookup_ET > tbody > tr > td: first - child {
        display: none;
    }
</style>

<link href="/Scripts/pluggins/multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Scripts/pluggins/multiselect/bootstrap-multiselect.js"></script>


<style>
    #ddlBranch + div ul.multiselect-container {
        max-height: 250px;
        overflow-y: auto;
    }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear{
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .multiselect-container.dropdown-menu {
        right: 0 !important;
        left: auto;
        min-width: 340px;
    }

    .iminentSpan .multiselect-container.dropdown-menu {
        right: auto !important;
        left: 0;
        min-width: 340px;
        margin-top: -12px;
    }

    .multiselect-container > li > a {
        padding: 5px 0;
    }

        .multiselect-container > li > a input[type="checkbox"] {
            transform: translateY(3px);
        }

    .multiselect-container > li.active > a {
        background: transparent !important;
        color: #333;
    }

        .multiselect-container > li > a:hover, .multiselect-container > li.active > a:hover {
            background: #f3f3f3 !important;
            color: #333 !important;
        }

    .multiselect-item.multiselect-filter {
        padding-bottom: 6px;
        border-bottom: 1px solid #ccc;
    }

        .multiselect-item.multiselect-filter .form-control.multiselect-search {
            height: 32px;
        }

        .multiselect-item.multiselect-filter .input-group-addon {
            background: #41a8f1;
            color: #fff;
            border-color: #41a8f1;
        }

    .input-group-btn .multiselect-clear-filter {
        background: #f98181;
        color: #fffefe;
        /* box-shadow: none; */
        text-shadow: none;
        border-color: #f96a6a;
        padding: 5px 10px 4px 10px;
    }

    .multiselect.dropdown-toggle {
        background: #fff;
        border-radius: 5px;
        border: 1px solid #b7b7b7;
        margin-bottom: 12px;
    }

    #ReportToModel label {
        font-weight: 500;
        margin-top: 5px;
    }

    #ReportToModel label {
        margin-top: 8px;
        font-size: 13px;
        margin-bottom: 2px;
    }

    #ddlBranch button, .multiselect.dropdown-toggle {
        color: #111 !important;
    }

    .multiselect.dropdown-toggle, .multiselect.dropdown-toggle:hover {
        z-index: 1;
        background: transparent;
    }
</style>


<script>
    var ID = 0;
    var urlKeys = getUrlVars();
    function UserAdd() {
        window.location.href = '/UserConfiguration/UserMasterList';
    }

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

    function CountryOnChange() {
        var CountryID = $('#ddlCountry option:selected').val();
     $.ajax({
         type: "POST",
         url: "@Url.Action("GetState", "BranchMaster")",
         data: { CountryID: CountryID },
         success: function (response) {
             $('#ddlState').html('');
             var html = "";
             for (var i = 0; i < response.length; i++) {
                 html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

             }
             $('#ddlState').html(html);


         }
     });
    }

    function StateOnChange() {
        var StateID = $('#ddlState option:selected').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GETCITY", "BranchMaster")",
                data: { StateID: StateID },
                success: function (response) {
                    $('#ddlCity').html('');
                    var html = "";
                    for (var i = 0; i < response.length; i++) {
                        html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                    }
                    $('#ddlCity').html(html);
                }
            });
    }
    function CityOnChange() {
        var CityID = $('#ddlCity option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GETPINZIP", "BranchMaster")",
            data: { CityID: CityID },
            success: function (response) {
                $('#ddlPIN').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                }
                $('#ddlPIN').html(html);
            }
        });
    }

    var PartyTypeId = [];

    function PartyTypeSelectionChanged(s, e) {
        PartyTypeGridLookup.gridView.GetSelectedFieldValues("desgid", GetPartyTypeSelectedFieldValuesCallback);
    }
    function GetPartyTypeSelectedFieldValuesCallback(values) {
        try {
            PartyTypeId = [];
            for (var i = 0; i < values.length; i++) {
                PartyTypeId.push(values[i]);
            }
        } finally {
            console.log(PartyTypeId);
        }
    }


    function CancelAdd() {
        if ($("#hdnAdd").val() == "1") {
            Swal.fire({
                title: 'Are you sure you want to Close with out save data.?',
                text: "This action cannot be undone!",
                imageUrl: '/assests/images/delete-big.png', // Custom icon for confirmation
                imageWidth: 40, // Adjust the width as needed
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/UserConfiguration/UserMasterList';

                }
            });
        }

        else {
            window.location.href = '/UserConfiguration/UserMasterList';
        }

    }

    if (urlKeys.key != 'Add' ) {
        ID = urlKeys.key;
        $("#hdnAdd").val(ID);
        if (ID != 0)
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("EditUser", "UserConfiguration")",
                data: { id: ID },
                success: function (response) {
                    if (response.USER_ID == "") {
                        jAlert('No data found');
                    }
                    else {

                        $('#hdnUserId').val(response.USER_ID);
                        $('#UserName').val(response.USER_NAME);
                        $('#LoginId').val(response.USER_LOGINID);
                        $('#Password').val(response.USER_PASSWORD);

                        $('#hdnReportToCode').val(response.USER_REPORTTO_ID);
                        //$('#ReportToTxt').val(response.USER_REPORTTO_ID);
                        $('#ReportToTxt').text(response.USER_REPORTTONAME);


                        $('#Address').val(response.USER_ADDRESS);
                        $('#Phone').val(response.USER_PHONE);
                        $('#Email').val(response.USER_EMAIL);
                        //$('#IsActive').val(response.ISACTIVE);
                        $('#IsActive').prop('checked', response.ISACTIVE);


                        // Branch Load
                        // Split the string into an array of values
                        var branchList = response.BRANCH_LIST.split(',');

                        // Set the selected values in the dropdown
                        $('#ddlBranch').val(branchList);

                        // Trigger the change event (optional)
                        $('#ddlBranch').trigger('change');

                        $('#ddlBranch').multiselect('refresh');
                        // Branch Load

                        $('#ddlDepartment').val(response.USER_DEPTID);
                        $('#ddlDesignation').val(response.USER_DEGID);
                        $('#ddlGroup').val(response.USER_GROUPID);
                        $('#ddlCountry').val(response.USER_COUNTRYID);


                        EditCountryOnChange(response.USER_STATEID);
                        EditStateOnChange(response.USER_CITYID);
                        EditCityOnChange(response.USER_PINID);



                    }
                }
            });
        }
    }

    function EditCountryOnChange(State) {
        var CountryID = $('#ddlCountry option:selected').val();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetState", "BranchMaster")",
                    data: { CountryID: CountryID },
                    async: false,
                    success: function (response) {
                        $('#ddlState').html('');
                        var html = "";
                        for (var i = 0; i < response.length; i++) {
                            html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                        }
                        $('#ddlState').html(html);

                        $('#ddlState').val(State);

                    }
                });
        }

    function EditStateOnChange(City) {
        var StateID = $('#ddlState option:selected').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GETCITY", "BranchMaster")",
                data: { StateID: StateID },
                async: false,
                success: function (response) {
                    $('#ddlCity').html('');
                    var html = "";
                    for (var i = 0; i < response.length; i++) {
                        html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                    }
                    $('#ddlCity').html(html);
                    $('#ddlCity').val(City);
                }
            });
    }

    function EditCityOnChange(PIN) {
        var CityID = $('#ddlCity option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GETPINZIP", "BranchMaster")",
            data: { CityID: CityID },
            async: false,
            success: function (response) {
                $('#ddlPIN').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                }
                $('#ddlPIN').html(html);

                $('#ddlPIN').val(PIN);
            }
        });
    }

    function EntrySave(mode)
    {

        $("#hdnAdd").val("0");
        savemode = mode;
        hasmsg = 0;

        var User_ID = $('#hdnUserId').val();

        var UserName = $('#UserName').val();
        var LoginId = $('#LoginId').val();

        var Password = $('#Password').val();
        var ReportTo = $('#hdnReportToCode').val();  // $('#ReportToTxt').val();
        var Address = $('#Address').val();
        var Phone = $('#Phone').val();
        var Email = $('#Email').val();
        var IsActive = $('#IsActive').prop('checked');

        //var Branch = $('#ddlBranch').val();  // $('#ddlBranch option:selected').val();

        var Branch = "";

        if($('#ddlBranch').val() != null){
            Branch = $('#ddlBranch').val().join(',');
        }


        var Department = $('#ddlDepartment option:selected').val();
        var Designation = $('#ddlDesignation option:selected').val();
        var Group = $('#ddlGroup option:selected').val();
        var Country = $('#ddlCountry option:selected').val();
        var State = $('#ddlState option:selected').val();
        var City = $('#ddlCity option:selected').val();
        var PIN = $('#ddlPIN option:selected').val();

        $.ajax({
            type: "POST",
            url: "@Url.Action("CheckUniqueUserLoginId", "UserConfiguration")",
            data: { LoginId: LoginId, User_ID: User_ID },
            async: false,
            success: function (response) {
                if(response=="1"){
                    Swal.fire({
                        icon: 'warning',
                        title: 'Sorry!',
                        text: 'Please Enter Unique User Login ID to proceed'
                    });
                    return false;
                }
                else
                {
                    if ($("#UserName").val().trim() == "") {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Sorry!',
                            text: 'Please Enter User Name to proceed'
                        });
                        return false;
                    }
                    else if ($("#LoginId").val().trim() == "") {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Sorry!',
                            text: 'Please Enter Login Id to proceed'
                        });
                        return false;
                    }
                    else if ($("#Password").val().trim() == "") {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Sorry!',
                            text: 'Please Enter Password to proceed'
                        });
                        return false;
                    }
                     else if (Branch == null || Branch == ""  ) {
                         Swal.fire({
                             icon: 'warning',
                             title: 'Sorry!',
                             text: 'Please Select Branch to proceed.'
                         });
                         return false;
                     }
                     else if (Department.trim() == null || Department.trim() == "" || Department.trim() == "Select") {
                         Swal.fire({
                             icon: 'warning',
                             title: 'Sorry!',
                             text: 'Please Select Department to proceed.'
                         });
                         return false;
                     }
                     else if (Designation.trim() == null || Designation.trim() == "" || Designation.trim() == "Select") {
                         Swal.fire({
                             icon: 'warning',
                             title: 'Sorry!',
                             text: 'Please Select Designation to proceed.'
                         });
                         return false;
                     }
                    else if ($('#hdnReportToCode').val() == "") {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Sorry!',
                            text: 'Please Enter ReportToTxt to proceed'
                        });
                        return false;
                    }
                    else if (Group.trim() == null || Group.trim() == "" || Group.trim() == "Select") {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Sorry!',
                            text: 'Please Select Group to proceed.'
                        });
                        return false;
                    }


                    var UserId = $('#hdnUserId').val();


                    var data = {
                        UserId: User_ID,
                        UserName: UserName,
                        LoginId: LoginId,
                        Password: Password,
                        Branch: Branch,
                        Department: Department,
                        Designation: Designation,
                        ReportTo: ReportTo,
                        Group: Group,
                        Address: Address,
                        Country: Country,
                        State: State,
                        City: City,
                        PIN: PIN,
                        Phone: Phone,
                        Email: Email,
                        IsActive: IsActive

                    }

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("SaveUser", "UserConfiguration")",
                        data: JSON.stringify({ Details: data }), // Fixed JSON formatting
                        async: true,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response != null)
                            {
                                if (response == "-20") {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Error in Add.'
                                    });
                                } else if (response == "-10") {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Login Id already exists..'
                                    });
                                } else if (response == "1") {
                                    Swal.fire({
                                        title: 'Success!',
                                        html: 'User saved successfully.',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            setTimeout(function () {
                                                var url = '/UserConfiguration/UserMasterList';
                                                window.location.href = url;
                                            }, 500);
                                        }
                                    });
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred while use Add.'
                                    });
                                }
                            }
                            else
                            {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred while use Add.'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while use Add.'
                            });
                        }

                    });
                }
            }
        })


    }

    function ReportToButnClick(s, e) {
        $('#ReportToModel').modal('show');
    }

    function ReportTo_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter" || e.code == "NumpadEnter") {
            $('#ReportToModel').modal('show');
            $("#txtReportToSearch").focus();
        }
    }


    function ReportTokeydown(e) {
        var OtherDetails = {}
        if ($.trim($("#txtReportToSearch").val()) == "" || $.trim($("#txtReportToSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtReportToSearch").val();

        if (e.code == "Enter" || e.code == "NumpadEnter") {
            var HeaderCaption = [];
            HeaderCaption.push("Name");

            if ($("#txtReportToSearch").val() != "") {
                callonServer("../../../Models/MRService.asmx/GetOnDemandReportTo", OtherDetails, "ReportToTable", HeaderCaption, "ReportToIndex", "SetReportTo");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[ReportToIndex=0]"))
                $("input[ReportToIndex=0]").focus();
        }
    }

    function SetReportTo(id, Name) {
        var key = id;
        $('#hdnReportToCode').val(id);
        if (key != null && key != '') {
            $('#ReportToModel').modal('hide');
            ReportToTxt.SetText(Name);
            ReportToTxt.SetFocus();
        }
    }

</script>

<script>
    $(document).ready(function () {
        $('#ddlBranch').multiselect({
            includeSelectAllOption: true,
            nonSelectedText: 'Select Branches',
            buttonWidth: '100%'
        });
    });
</script>


<div class="breadCumb">
    <span id="HeaderLableID">User Configuration</span>
    <div id="ApprovalCross" onclick="UserAdd()" class="crossBtnN"><i class="fa fa-times"></i></div>
</div>
<div class="container">
    <div class="form_main backBox p-3 mb-3">
        <div class="row mb-3">

            <div class=" col-sm-3">
                <label>User Name<span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @MaxLength = "300" })
                </div>
            </div>
            <div class=" col-sm-3">
                <label>Login Id<span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @MaxLength = "50" })
                </div>
            </div>
            <div class=" col-sm-3">
                <label>Password<span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @MaxLength = "50" })
                </div>
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>Branch<span style="color:red">*</span></label>
                @*@Html.DropDownListFor(m => m.Branch, new SelectList(Model.BranchList, "ID", "NAME", Model.SelectedBranchIDs), new { @id = "ddlBranch", multiple = "multiple", @class = "demo multiselect" }*@
                @Html.DropDownList("ddlBranch", new SelectList(Model.BranchList, "ID", "NAME"), new { @multiple = "multiple", @id = "ddlBranch", @class = "demo multiselect" })
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>Department<span style="color:red">*</span></label>
                @Html.DropDownListFor(m => m.Department, new SelectList(Model.DepartmentList, "ID", "NAME", Model.DeparmentID), "Select", new { @id = "ddlDepartment", @class = "form-control" }
            )
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>Designation<span style="color:red">*</span></label>
                @Html.DropDownListFor(m => m.Designation, new SelectList(Model.DesignationList, "ID", "NAME", Model.DesignationID), "Select", new { @id = "ddlDesignation", @class = "form-control" }
            )
            </div>

            <div class="col-md-3">
                <label>Report To<span style="color:red">*</span></label>
                <div>
                    @Html.DevExpress().ButtonEdit(
                    settings =>
                    {
                        settings.Name = "ReportToTxt";
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Text = Model.ReportTo;
                        settings.ReadOnly = true;
                        settings.Properties.Buttons.Add("...");
                        settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){ReportToButnClick(s,e);}";
                        settings.Properties.ClientSideEvents.KeyDown = "function(s,e){ReportTo_KeyDown(s,e);}";

                    }).GetHtml()

                    <input type="hidden" id="txtContact_hidden">
                    <input type="hidden" id="hdnReportToCode" value="@Model.ReportToCode">
                </div>
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>Group<span style="color:red">*</span></label>
                @Html.DropDownListFor(m => m.Group, new SelectList(Model.GroupList, "ID", "NAME", Model.GroupID), "Select", new { @id = "ddlGroup", @class = "form-control" }
            )
            </div>
            <div class="col-sm-6">
                <label>Address</label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @MaxLength = "500" })
                </div>
            </div>
            <div class="col-sm-3  h-branch-select">
                <label>Country</label>
                @Html.DropDownListFor(m => m.Country, new SelectList(Model.CountryList, "ID", "NAME"), "Select", new { @id = "ddlCountry", @class = "form-control", @onchange = "CountryOnChange();" }
            )
            </div>
            <div class="col-sm-3  h-branch-select">
                <label>State</label>
                <div>
                    <select id="ddlState" class="form-control" onchange="StateOnChange()"></select>
                </div>
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>City / District </label>
                <div>
                    <select id="ddlCity" class="form-control" onchange="CityOnChange()"></select>
                </div>
            </div>

            <div class="col-sm-3  h-branch-select">
                <label>PIN</label>
                <div>
                    <select id="ddlPIN" class="form-control"></select>
                </div>
            </div>
            <div class="col-sm-3">
                <label>Phone</label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @MaxLength = "10" })
                </div>
            </div>

            <div class="col-sm-3">
                <label>Email</label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @MaxLength = "200" })
                </div>
            </div>

            <div class=" col-sm-3">
                <div class="form-group">
                    <label>
                        @Html.CheckBoxFor(m => m.IsActive, new { @tabindex = "3" })
                        Check to Make Active
                    </label>
                </div>
            </div>


            <div class="clear"></div>
            <div class="mt-4 px-4">
                @if (Convert.ToInt16(ViewBag.IsView) == 0)
                {
                    <button type="button" class="btn btn-success  save-btn" onclick="EntrySave('Exit');"><span class="btn-icon"><img src="../../../assests/images/save-instagram.svg"></span> Save and Exit</button>
                }
                <button type="button" class="btn btn-cancel cancel-catg" onclick="CancelAdd()"><span class="btn-icon"><img src="../../../assests/images/cancel.svg"></span> Cancel & Exit</button>

            </div>
        </div>
    </div>

</div>

<input type="hidden" value="@Model.user_id" id="hdnUserId" />

<div class="modal fade pmsModal w70" id="ReportToModel" role="dialog">
    @*Rev 5.0 : w-50 class add*@
    <div class="modal-dialog w-50">
        @*Rev end 5.0*@
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Report To Search</h4>
            </div>
            <div class="modal-body">
                <input class="form-control mb-3" type="text" onkeydown="ReportTokeydown(event)" id="txtReportToSearch" autofocus style="width:100%" placeholder="Search By Report To Name" />
                <div id="ReportToTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Name</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>