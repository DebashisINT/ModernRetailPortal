

@using ModernRetail.Models;
@model ModernRetail.Models.ProductRateImportLog
@{
    ViewBag.Title = "Product Rates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.0/js/dataTables.fixedColumns.min.js"></script>
<script src="~/Scripts/SearchPopupDatatable.js"></script>
<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<script src="~/Scripts/SearchMultiPopup.js"></script>
<style>
    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }


    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 8px;
            right: -2px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        /*background: #094e8c !important;
    background-image: none !important;*/
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        /*color: #fff;*/
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    /*.pmsModal .modal-header .modal-title {
        font-size: 14px;
    }*/

    .pmsModal .modal-header .modal-title {
        font-size: 16px !important;
        color: #111;
        font-size: 24px;
    }

    .pmsModal .modal-header {
        background: transparent !important;
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .close {
        font-size: 34px;
        opacity: .8;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 38px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
        margin-right: 5px;
    }

        .show-btn:hover {
            background: #072743;
        }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #9d9d9d !important;
            color: #fff;
        }

    .swal2-confirm.swal2-styled {
        border-radius: 8px !important;
    }

    .swal2-styled {
        border-radius: 12px !important;
        padding: 8px 20px !important;
        color: #fff !important;
        font-size: 14px !important;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
        width: 90px !important;
        border-radius: 8px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 50%) !important;
    }

    div:where(.swal2-container).swal2-center > .swal2-popup {
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 48%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
        word-break: keep-all;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        overflow: visible;
    }

    #btnSave .btn-icon, .cancel-catg .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        #btnSave .btn-icon img {
            color: #238945;
            width: 14px;
        }

    .cancel-catg, #btnSave {
        transition: all .3s ease-in-out;
    }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

        .cancel-catg:hover {
            transform: scale(1.1);
        }

        #btnSave:hover {
            transform: scale(1.1);
        }

    .modal-footer .btn + .btn {
        margin-bottom: 0;
        margin-left: 5px;
    }

    .cancel-catg {
        margin-right: 5px;
    }

    .close:hover, .close:focus {
        color: #111 !important;
    }

    /*Rev Pallab: grid modification*/

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*overflow: hidden;*/
        word-break: break-word;
    }

    .rowActive {
        background-color: #ebf4ff !important;
        color: #000 !important;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: none; /* Initially hidden */
    }

    .flex-loader {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        width: 100%;
        height: 100%;
    }

    .dxgvLoadingPanel_PlasticBlue {
        display: none !important;
    }

    .flex-loader img {
        width: 120px;
    }

    .flex-loader h4 {
        font-size: 22px;
        color: #000000;
    }

    .btn-export {
        background: #d0d0d0;
    }

        .btn-export .btn-icon img {
            width: 30px;
            height: 30px;
        }
    /*Rev End Pallab: grid modification*/

    @@media only screen and (max-width: 768px) {
        .flex-loader {
            width: 25% !important;
            height: 100vh !important;
        }
    }
</style>
<style>
    .dis-flex {
        display: flex;
        align-items: center;
    }

    .more-btn .dropdown-menu {
        display: none;
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease-in-out;
        position: absolute;
        background-color: #fff;
        border: 1px solid #ddd;
        /*padding: 10px;*/
        border-radius: 10px;
        z-index: 1000;
    }

        .more-btn .dropdown-menu button.btn {
            width: 100%;
            border-radius: 0;
            color: #111;
            background: transparent;
            text-align: left;
            transition: all .3s;
            border-bottom: 1px solid #dadada;
        }

            .more-btn .dropdown-menu button.btn:last-child {
                border-bottom: none;
                margin-bottom: 0;
            }

            .more-btn .dropdown-menu button.btn:hover {
                color: #fff !important;
                background: #7933d0;
            }

            .more-btn .dropdown-menu button.btn:focus {
                color: #fff !important;
                background: #7933d0;
            }

    #moreOptions button .btn-icon {
        margin-right: 5px;
    }

    .more-btn .dropdown-menu.show {
        display: block;
        opacity: 1;
        transform: translateY(0);
    }

    .more-btn {
        position: relative;
    }

    .more-option-buttons {
        background: #893823;
    }

    .btn-icon img {
        width: 22px;
    }

    #Producttxt {
        margin-left: 5px;
        height: 38px;
    }


    #gridList {
        position: relative;
    }

    .action-buttons {
        display: none;
        position: absolute;
        /*background: #ffffff;*/
        /*border: 1px solid #ddd;*/
        border-radius: 5px;
        padding: 5px 10px;
        /*box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);*/
        white-space: nowrap;
        z-index: 1000; /* Ensure it appears above other elements */
        transform: translate(-50%, -100%); /* Position above and centered horizontally */
        transition: opacity 0.3s ease; /* Smooth fade-in effect */
        top: 45px;
        right: -45px;
    }

        .action-buttons.visible {
            display: block !important; /* Add this class dynamically */
        }


        .action-buttons a {
            color: #007bff;
            text-decoration: none;
            font-size: 14px;
            cursor: pointer;
        }

            .action-buttons a img {
                width: 30px;
                height: 30px;
            }

            .action-buttons a:hover {
                text-decoration: underline;
            }


    #moreOptions .btn .btn-icon {
        border-radius: 50px;
        width: 24px;
        height: 24px;
        display: inline-block;
        background: #fff;
        line-height: 23px;
        margin-right: 5px;
        /*color: #054682;*/
        text-align: center;
    }

        #moreOptions .btn .btn-icon img {
            width: 16px;
        }

    .mTop5 button {
        margin-top: 10px;
        height: 34px;
        padding: 0px 10px 3px;
    }

    .validationDiv {
        margin-bottom: 10px;
    }

    @@media only screen and (max-width: 768px) {
        .dropdown-menu {
            right: 0;
            left: auto;
        }
            /*        .flex-loader {
             width: 25% !important;
            height: 100vh !important;
        }*/

            .dropdown-menu button.btn {
                margin-bottom: 0;
                padding: 8px 8px;
                height: auto;
            }

        #btnMore .tooltip {
            display: none;
        }
    }
</style>
<script>
     var ProductId = [];
    var ProdArr = new Array();
    $(document).ready(function () {
         $('#ProductModel').on('shown.bs.modal', function () {
     $('#txtProductSearch').focus();
    })



    var ProdObj = new Object();
    ProdObj.Name = "ProductSource";
    ProdObj.ArraySource = ProdArr;
    arrMultiPopup.push(ProdObj);
    })

    function ProductButnClick(s, e) {
        $('#ProductModel').modal('show');
    }

    function Product_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#ProductModel').modal('show');
        }
    }

    function Productkeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtProductSearch").val()) == "" || $.trim($("#txtProductSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtProductSearch").val();


        if (e.code == "Enter" || e.code == "NumpadEnter") {

            var HeaderCaption = [];
            HeaderCaption.push("Product Code");
            HeaderCaption.push("Product Name");


            if ($("#txtProductSearch").val() != "") {
                callonServerM("../../../Models/MRService.asmx/GetProduct", OtherDetails, "UserTable", HeaderCaption, "dPropertyIndex", "SetSelectedValues", "ProductSource");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[dPropertyIndex=0]"))
                $("input[dPropertyIndex=0]").focus();
        }
    }

    function SetfocusOnseach(indexName) {
        if (indexName == "dPropertyIndex")
            $('#txtProductSearch').focus();
        else
            $('#txtProductSearch').focus();
    }

    function SetSelectedValues(Id, Name, ArrName) {
        if (ArrName == 'ProductSource') {
            var key = Id;
            if (key != null && key != '') {
                $('#ProductModel').modal('hide');
                Producttxt.SetText(Name);
                $('#hdnProductId').val(key);
            }
            else {
                Producttxt.SetText('');
                $('#hdnProductId').val('');
            }
        }
    }

     function GetProductSelectedFieldValuesOndemand(values) {
     try {
         ProductId = [];
         var eids = values.split(',');
         for (var i = 0; i < eids.length; i++) {
             ProductId.push(eids[i]);
         }
     } finally {
         console.log(ProductId);
     }
 }
</script>
<script>
    var Is_PageLoad = "0";
    var Product_Ids="";

    $(function () {

        $('body').on('click', '#btnshow', function () {
            Is_PageLoad = "1";
            GetProductSelectedFieldValuesOndemand($("#hdnProductId").val());
            Product_Ids = ProductId.join(',');
            gridList.Refresh();
            gridList.Refresh();
        });



        $('#ddlAppIds').on('click', function () {
            var selectedValue = "1"; // XLSX export value
            var desg = $("#drpdesignation").val();
            var usrtype = $("#ddlusertypes").val();
            var url = '@Url.Action("ExportList", "ProductRates", new { type = "_type_" })';
            window.location.href = url.replace("_type_", selectedValue);
        });
    });

    function OnStartCallback(s, e) {
        e.customArgs["Is_PageLoad"] = Is_PageLoad;
        e.customArgs["Product_Ids"] = Product_Ids;
        /*Rev Pallab: grid modification*/
        document.getElementById("loading-overlay").style.display = "block";
        /*Rev End Pallab: grid modification*/
    }
    /*Rev Pallab: grid modification*/
    function OnEndCallback() {

        document.getElementById("loading-overlay").style.display = "none";

    }
    /*Rev End Pallab: grid modification*/

    function AddProductRates() {
        $("#hdnID").val('0');
        var url = '/ProductRates/Index?key=Add';
        window.location.href = url;
    }

      function EditClick(ID) {
         $("#hdnID").val(ID);
         if (parseInt(ID) > 0) {
                 $.ajax({
                     type: "POST",
                     url: "@Url.Action("SetMapDataByID", "ProductRates")",
                     data: { ID: ID, IsView: 0 },
                     success: function (response) {
                         if (response != null && response == true) {
                             var url = '/ProductRates/Index?key=' + ID;
                             window.location.href = url;
                         }
                         else {
                             jAlert('Please try again later.');
                             return false;
                         }
                     }
                 });
         }


    }

     function DeleteClick(ID) {
        $("#hdnID").val(ID);


        // SweetAlert confirmation with custom icon
    Swal.fire({
        title: 'Are you sure you want to delete?',
        text: "This action cannot be undone!",
        imageUrl: '/assests/images/delete-big.png', // Custom icon for confirmation
        imageWidth: 40, // Adjust the width as needed
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes',
        cancelButtonText: 'No'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "ProductRates")',
                data: { ID: ID },
                success: function (response) {
                    if (parseInt(response) > 0) {
                        // SweetAlert success message with custom icon
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'The record has been deleted successfully.',
                            /*imageUrl: '/path/to/your/success-icon.png', */
                            /*imageWidth: 50, */
                            icon: 'success' // You can also keep the built-in icon type
                        }).then(() => {
                            location.reload();
                        });
                    } else if (parseInt(response) == -10) {
                        // SweetAlert error message with custom icon
                        Swal.fire({
                            title: 'Sorry!',
                            text: 'Product Rate already mapped with another module. Cannot delete.',
                            imageUrl: '/path/to/your/error-icon.png',
                            imageWidth: 50,
                            icon: 'error' // You can also keep the built-in icon type
                        });
                    }
                }
            });
        }
    });
    }

    /*Rev Pallab: grid modification*/
    function gridRowclick(s, e) {
        $('#gridList').find('tr').removeClass('rowActive');


        $(s.GetRow(e.visibleIndex)).addClass('rowActive');


        $('.action-buttons').removeClass('visible').hide();


        var rowElement = $('#gridList_DXDataRow' + e.visibleIndex);


        var actionButtons = $(rowElement).find('.action-buttons');


        var rowOffset = $(rowElement).offset();


        //actionButtons.css({
        //    top: rowOffset.top,
        //    left: rowOffset.left + ($(rowElement).outerWidth() / 2) - (actionButtons.outerWidth() / 2),
        //    zIndex: 9999 
        //});


        actionButtons.addClass('visible').fadeIn(200);
    }

    $(document).on('click', function (e) {
        if (!$(e.target).closest('.action-buttons, .dxgvDataRow').length) {
            $('.action-buttons').hide();
        }
    });
    /*Rev End Pallab: grid modification*/
</script>
<script>
     function DownloadFormat() {
    var url = '@Url.Action("DownloadFormat", "ProductRates")'
    window.location.href = url;
    }

    function ImportProductPopOpen() {
    $("#myImportProductModal").modal('show');
}

function ChekEmpSettingsUpload() {
    todate = null;
    fromdate = null;
    var isprocess = false;
    var filename = $("#fileprod").val();
    if ($('#fileprod').get(0).files.length === 0) {
        //jAlert("No files selected.");
        Swal.fire({
            icon: 'warning',
            title: 'Warning',
            text: 'No files selected.'
        });

        return false;
    }
    else {
        var extension = filename.replace(/^.*\./, '');
        switch (extension.toLowerCase()) {
            case 'xls':
                isprocess = true;
            case 'xlsx':
                isprocess = true;
            default:
                // Cancel the form submission
                if (!isprocess) {
                   // jAlert('Only excel file require.');
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning',
                        text: 'Only excel file require.'
                    });
                    return false;
                }
        }
    }

    if (isprocess == true) {
        var fileUpload = $("#fileprod").get(0);
        var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }


        $.ajax({
            url: "@Url.Action("ImportExcel", "ProductRates")",
            type: "POST",
            contentType: false,
            processData: false,
            data: fileData,
            success: function (result) {
                jAlert(result, 'Alert', function () {
                    $("#fileprod").val('');
                    $("#myImportProductModal").modal('hide');
                });

            },
            error: function (err) {
               // jAlert(err.statusText);
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: err.statusText
                });

            }
        });
    }
}

function ImportLogPopOpen() {
    var d = new Date();

    dtLogFrom.SetValue(d);
    dtLogTo.SetValue(d);

    pcModalImportViewMode.Show();
}

function ProductImportUserLog() {
    var url = '/ProductRates/ProductImportLog/';
    $.ajax({
        type: "POST",
        url: url,
        data: JSON.stringify({ 'Fromdt': dtLogFrom.GetText(), 'ToDate': dtLogTo.GetText() }),
        async: false,
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            console.log(response);
            if (response == "True") {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ImportLog", "ProductRates")",
                    success: function (response) {
                        if (response) {
                            //$("#ReAssignedModal_AreaRouteBeat").modal('hide');
                            pcModalTemplateImportLog.Show();
                            gridProductImportLog.Refresh();
                            gridProductImportLog.Refresh();
                        }
                    }
                });
            }
            else {
                //jAlert(response);
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: response
                });

            }
        },
        error: function (response) {
            console.log(response);
        }
    });
}

</script>
<script>

    function toggleDropdown() {
        const dropdown = $('#moreOptions');
        if (dropdown.hasClass('show')) {
            dropdown.removeClass('show').css('display', 'none');
        } else {
            dropdown.addClass('show').css('display', 'block');
        }
    }

    $(document).on('click', function (e) {
        if (!$(e.target).closest('#btnMore, #moreOptions').length) {
            $('#moreOptions').removeClass('show').css('display', 'none');
        }
    });
</script>



<div class="breadCumb">
    <span>Product Rate</span>
</div>
@*Rev Pallab: grid modification*@
<div class="overlay" id="loading-overlay">
    <div class="flex-loader">
        <img src="/assests/images/new-loader.gif" />
        <h4>Data is loading, Please Wait</h4>
    </div>

</div>
@*Rev End Pallab: grid modification*@

<div class="container">
    <div class="form_main backBox p-3">
        @*<div class="row">
            <div class="col-md-12 buttons-alignment" style="padding-top: 0;margin-bottom: 15px;">*@
        <div class="pull-left tblspace smblock d-flex mt-2 mb-4">
            @if (ViewBag.CanAdd)
            {
                <button type="button" class="btn add-btn mr-4" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" onclick="AddProductRates();">
                    <span class="btn-icon"><i class="fa fa-plus"></i></span> Add New
                </button>
            }

            

            <div class="dis-flex mr-4">
                <label>
                    Product(s) 
                </label>
                <div>
                    @Html.DevExpress().ButtonEdit(
                    settings =>
                    {
                    settings.Name = "Producttxt";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.ReadOnly = true;
                    settings.Properties.Buttons.Add("...");
                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){ProductButnClick(s,e);}";
                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Product_KeyDown(s,e);}";

                    }).GetHtml()
                </div>
            </div>
            @if (ViewBag.CanView)
            {
                <button type="button" id="btnshow" class="btn show-btn mr-4" tabindex=4> <span class="btn-icon"><i class="fa fa-eye" aria-hidden="true"></i></span> Show Data</button>
            }

            <div class="mr-3 more-btn">
                <button type="button" id="btnMore" class="btn more-option-buttons tooltip-container" onclick="toggleDropdown()">
                    <span class="btn-icon"><img src="../../../assests/images/more-btns.svg"></span>
                    <div class="tooltip">More Options</div>
                </button>
                <div id="moreOptions" class="dropdown-menu">
                    @if (ViewBag.CanExport)
                    {
                        <button type="button" name="ddlAppIds" id="ddlAppIds" class="btn btn-sm">
                            <span class="btn-icon"><img src="/assests/images/excel.png" /></span> Export to XLSX
                        </button>
                    }
                    @if (ViewBag.CanAdd)
                    {
                        <button type="button" id="btnDownloadFormat" class="btn" onclick="DownloadFormat()">
                            <span class="btn-icon"><img src="../../../assests/images/download-format.svg"></span> Download Format
                        </button>
                        <button type="button" id="btnImport" class="btn" onclick="ImportProductPopOpen()">
                            <span class="btn-icon"><img src="../../../assests/images/file-import.svg"></span> Import(Add/Update)
                        </button>
                        <button type="button" id="btnShowImportLog" class="btn" onclick="ImportLogPopOpen()">
                            <span class="btn-icon"><img src="../../../assests/images/log-files.svg"></span> View Log
                        </button>
                    }
                </div>
            </div>
        </div>

        @*</div>

            </div>*@
        <div class="clearfix"></div>
        <div class="scrooler">
            <div id="refreshgrid">
                @{
                    Html.RenderAction("PartialGridList", "ProductRates", new { Is_PageLoad = "0" });
                }
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="hdnID" />

@Html.DevExpress().PopupControl(
           settings =>
           {
               settings.Name = "pcModalImportViewMode";
               settings.Width = 300;
               settings.AllowDragging = true;
               settings.CloseAction = CloseAction.CloseButton;
               settings.CloseOnEscape = true;
               settings.PopupAnimationType = AnimationType.None;
               settings.HeaderText = "Bulk Update Party Log";
               settings.Modal = true;
               settings.AutoUpdatePosition = true;
               settings.Top = 50;
               settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
               settings.PopupVerticalAlign = PopupVerticalAlign.Above;
               settings.SetContent(() =>
               {
                   Html.RenderPartial("_ProductImportManualLogView");
               });
           }).GetHtml()

@Html.DevExpress().PopupControl(
        settings =>
        {
            settings.Name = "pcModalTemplateImportLog";
            settings.Width = 1000;
            settings.AllowDragging = true;
            settings.CloseAction = CloseAction.CloseButton;
            settings.CloseOnEscape = true;
            settings.PopupAnimationType = AnimationType.None;
            settings.HeaderText = "Product Import Log";
            settings.Modal = true;
            settings.AutoUpdatePosition = true;
            settings.Top = 50;
            settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            settings.PopupVerticalAlign = PopupVerticalAlign.Above;
            settings.SetContent(() =>
            {
                Html.RenderPartial("ImportLog", new List<ProductRateImportLog>());
            });
        }).GetHtml()

<div id="myImportProductModal" class="modal fade pmsModal w30" data-backdrop="static" role="dialog">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="close()">&times;</button>
                <h4 class="modal-title">Import Excel Template For Products</h4>
            </div>
            <div class="modal-body">
                <div>
                    <div class="">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="divproduct">
                                    <label class="uplabel mb-4">Select File to Import (Add/Update)</label>
                                    <div><input type="file" id="fileprod" accept=".xls,.xlsx"></div>
                                    <div class="pTop10  mTop5 mt-4"><input type="submit" value="Import (Add/Update)" onclick="return ChekEmpSettingsUpload();" id="btnimportxls" class="btn btn-primary"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--User Modal -->
<div class="modal fade pmsModal w50" id="ProductModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Product Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" class="form-control mb-3" onkeydown="Productkeydown(event)" id="txtProductSearch" width="100%" placeholder="Search By User Name" />
                <div id="UserTable">
                    <table border='1' width="100%">

                        <tr class="HeaderStyle" style="font-size:small">
                            <th>Select</th>
                            <th class="hide">id</th>
                            <th>Product Code</th>
                            <th>Product Name</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btnOkformultiselection btn-default btn btn-danger" onclick="DeSelectAll('ProductSource')">Deselect All</button>
                <button type="button" class="btnOkformultiselection btn-default  btn btn-success" data-dismiss="modal" onclick="OKPopup('ProductSource')">OK</button>

            </div>
        </div>
    </div>
</div>
<asp:HiddenField ID="hdnProductId" runat="server" />
<!--User Modal -->
