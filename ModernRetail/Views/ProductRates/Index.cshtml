
@using System.Web.UI.WebControls
@using DevExpress.Web;
@using DevExpress.Web.Mvc;

@model ModernRetail.Models.ProductRateModel
@{
    ViewBag.Title = "Product Rates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.0/js/dataTables.fixedColumns.min.js"></script>
<script src="~/Scripts/SearchPopupDatatable.js"></script>
<link href="~/assests/css/SearchPopup.css" rel="stylesheet" />
<script src="~/Scripts/SearchPopup.js"></script>
@*<script src="~/Scripts/SearchMultiPopup.js"></script>*@
<style>
    #grid .dxgvHSDC > div, #grid .dxgvCSD {
        width: 100% !important;
    }

    .hide {
        display: none;
    }

    .full-grid, #grid {
        width: 100% !important;
    }

    #gridLevelEntryList, #gridLevelEntryList > tbody > tr > td > div.dxgvHSDC > div {
        width: 100% !important;
    }

    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: white !important;
    }
</style>
<style>
    .dxgvControl_PlasticBlue td.dxgvBatchEditModifiedCell_PlasticBlue {
        background: #fff;
    }

    .dxgvStatusBar_PlasticBlue {
        display: none;
    }

    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }


    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 33px;
            right: 13px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*font-weight: 500;*/
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
        background: #e5e5e5;
        padding: 0 10px;
        margin-top: 15px;
        border-radius: 8px;
    }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        /*background: #094e8c !important;
    background-image: none !important;*/
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        /*color: #fff;*/
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    /*.pmsModal .modal-header .modal-title {
        font-size: 14px;
    }*/

    .pmsModal .modal-header .modal-title {
        font-size: 16px !important;
        color: #111;
        font-size: 24px;
    }

    .pmsModal .modal-header {
        background: transparent !important;
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .close {
        font-size: 34px;
        opacity: .8;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
        padding-right: 25px;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 34px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
        margin-right: 5px;
    }

        .show-btn:hover {
            background: #072743;
        }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #a24716 !important;
            color: #fff;
        }

    .swal2-confirm.swal2-styled {
        border-radius: 8px !important;
    }

    .swal2-styled {
        border-radius: 12px !important;
        padding: 8px 20px !important;
        color: #fff !important;
        font-size: 14px !important;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
        width: 90px !important;
        border-radius: 8px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 50%) !important;
    }

    div:where(.swal2-container).swal2-center > .swal2-popup {
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 42%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*overflow: visible;*/
    }

    .save-btn .btn-icon, .cancel-catg .btn-icon, .saveicon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        .save-btn .btn-icon img, .saveicon img {
            color: #238945;
            width: 14px;
        }



    .cancel-catg, .save-btn {
        transition: all .3s ease-in-out;
        margin-right: 10px;
    }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

        .cancel-catg:hover {
            transform: scale(1.1);
        }

        .save-btn:hover {
            transform: scale(1.1);
        }

    .modal-footer .btn + .btn {
        margin-bottom: 0;
        margin-left: 5px;
    }

    .cancel-catg {
        margin-right: 5px;
    }

    .close:hover, .close:focus {
        color: #111 !important;
    }

    #NEWVISIT, #REVISIT, #ORDERAMOUNT, #COLLECTION, #ORDERQTY {
        padding: 0;
    }

        #NEWVISIT input, #REVISIT input, #ORDERAMOUNT input, #COLLECTION input, #ORDERQTY input {
            height: 100%;
            padding: 0 5px;
        }

    table.dataTable thead th {
        padding: 6px 9px;
    }

    .dxgvControl_PlasticBlue a {
        margin: 5px 3px;
        display: inline-block;
    }

    .pmsModal .modal-body {
        padding: 10px 20px;
    }

    .pmsModal .modal-footer {
        padding: 10px 20px;
    }

    .dataTables_length label {
        display: flex;
        align-items: center;
    }

    .dataTables_filter input {
        /*display: block;*/
        width: 60%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555;
        vertical-align: middle;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .dataTables_length select {
        margin-left: 5px;
        margin-right: 5px;
    }


    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0;
    }

    .pagination > li > a, .pagination > li > span {
        padding: 4px 8px;
    }

    div.dataTables_wrapper div.dataTables_info {
        padding-top: 10px;
    }

    .crossBtnN {
        color: #fff;
        cursor: pointer;
    }

    div.dataTables_wrapper div.dataTables_info {
        font-size: 12px;
    }

    #GridLevellistModel .modal-dialog {
        width: 45%;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        outline: none;
        border: none;
    }

    .dynamicPopupTbl > tbody > tr > td input {
        width: 100%;
        white-space: break-spaces;
    }

    input:focus, textarea:focus, select:focus {
        outline: none;
    }

    .select2-container--default .select2-selection--single {
        height: 34px;
        /* padding: 6px 12px; */
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    .select2-container {
        z-index: 1;
    }

    .select2-container--default .select2-selection--single {
        background-color: transparent;
    }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            display: none;
        }

    .select2-container--default .select2-search--dropdown .select2-search__field {
        border-radius: 4px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 32px;
        padding-right: 22px;
    }
</style>
<script>
    $(document).ready(function () {

        var branch_ID = $('#hdnDetailsID').val();
        if (branch_ID== 0) {
            GETBRANCH();
            GETDESIGNATION();
        }


        $('#ddlBranch').select2({
            placeholder: "Select",
            allowClear: false
        });

        $('#ddlDesignation').select2({
            placeholder: "Select",
            allowClear: false
        });

        
    });

    function GETDESIGNATION() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GETDESIGNATION", "ProductRates")",
            async: false,
            success: function (response) {
                $('#ddlDesignation').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";
                }
                $('#ddlDesignation').html(html);
            }
        });
    }

    function GETBRANCH() {
     var branch_ID = $('#hdnDetailsID').val();
     $.ajax({
         type: "POST",
         url: "@Url.Action("GetBranch", "ProductRates")",
         data: { branch_ID: branch_ID },
         async: false,
         success: function (response) {
             $('#ddlBranch').html('');
             var html = "";
             for (var i = 0; i < response.length; i++) {
                 html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";
             }
             $('#ddlBranch').html(html);
         }
     });
}
</script>
<script>

    var ID = 0;
    var urlKeys = getUrlVars();
    function ProductRatesAdd() {
        window.location.href = '/ProductRates/ProductRatesList';
    }

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }
    if (urlKeys.key != 'Add') {
        ID = urlKeys.key;
        $("#hdnAdd").val(ID);
        if (ID != 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("EditProductRate", "ProductRates")",
                data: { id: ID },
                success: function (response) {
                    if (response.code == "") {
                        jAlert('No data found');
                    }
                    else {
                        GETBRANCH();
                       // GETCOUNTRY();
                        $("#ShortName").val(response.ShortName);
                        $("#ddlBranch").val(response.ParentBranch);
                        // $("#ddlBranch").val(response.ParentBranch).trigger('change');
                        $("#BranchName").val(response.BranchName);
                        $("#Address1").val(response.Address1);
                        $("#ddlDesignation").val(response.Country);
                        // $("#ddlDesignation").val(response.Country).trigger('change');
                        EditCountryOnChange(response.State);
                        EditStateOnChange(response.City);
                        EditCityOnChange(response.PIN);
                    }
                }
            });
        }
    }



    function EditCountryOnChange(State) {
    var CountryID = $('#ddlDesignation option:selected').val();
         $.ajax({
             type: "POST",
             url: "@Url.Action("GetState", "ProductRates")",
             data: { CountryID: CountryID },
             async: false,
             success: function (response) {
                 $('#ddlState').html('');
                 var html = "";
                 for (var i = 0; i < response.length; i++) {
                     html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                 }
                 $('#ddlState').html(html);
                 $('#ddlState').val(State);


             }
         });
    }

    function EditStateOnChange(City) {
    var StateID = $('#ddlState option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GETCITY", "ProductRates")",
            data: { StateID: StateID },
            async: false,
            success: function (response) {
                $('#ddlCity').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                }
                $('#ddlCity').html(html);
                $('#ddlCity').val(City);
            }
        });
}
    function EditCityOnChange(PIN) {
    var CityID = $('#ddlCity option:selected').val();
    $.ajax({
        type: "POST",
        url: "@Url.Action("GETPINZIP", "ProductRates")",
        data: { CityID: CityID },
        async: false,
        success: function (response) {
            $('#ddlPIN').html('');
            var html = "";
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

            }
            $('#ddlPIN').html(html);

            $('#ddlPIN').val(PIN);
        }
    });
}

    function CountryOnChange() {
        var CountryID = $('#ddlDesignation option:selected').val();
     $.ajax({
         type: "POST",
         url: "@Url.Action("GetState", "ProductRates")",
         data: { CountryID: CountryID },
         success: function (response) {
             $('#ddlState').html('');
             var html = "";
             for (var i = 0; i < response.length; i++) {
                 html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

             }
             $('#ddlState').html(html);


         }
     });
    }

    function StateOnChange() {
        var StateID = $('#ddlState option:selected').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GETCITY", "ProductRates")",
                data: { StateID: StateID },
                success: function (response) {
                    $('#ddlCity').html('');
                    var html = "";
                    for (var i = 0; i < response.length; i++) {
                        html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                    }
                    $('#ddlCity').html(html);
                }
            });
    }
    function CityOnChange() {
        var CityID = $('#ddlCity option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GETPINZIP", "ProductRates")",
            data: { CityID: CityID },
            success: function (response) {
                $('#ddlPIN').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].ID + "'>" + response[i].NAME + "</option>";

                }
                $('#ddlPIN').html(html);
            }
        });
    }

    function EntrySave(mode) {

    $("#hdnAdd").val("0");
    savemode = mode;
    hasmsg = 0;
   
    var Branch = $('#ddlBranch option:selected').val();   
    var Designation = $('#ddlDesignation option:selected').val();
    var Employee = $('#txtEmployee_hidden').val();
    var Product = $('#HiddenProductID').val();  
    var SpecialPrice = $("#txtSpecialPrice").val();
   
    if ($('#ddlBranch option:selected').val() == null || $('#ddlBranch option:selected').val() == "0" || $('#ddlBranch option:selected').val() == "Select" || $('#ddlBranch option:selected').val() == "undefined") {

        // SweetAlert for empty category description
        Swal.fire({
            icon: 'warning',
            title: 'Sorry!',
            text: 'Please Select  Branch to proceed.'
        });
        return false;
        }
    else if ($('#ddlDesignation option:selected').val() == null || $('#ddlDesignation option:selected').val() == "0" || $('#ddlDesignation option:selected').val() == "Select" || $('#ddlDesignation option:selected').val() == "undefined") {

    // SweetAlert for empty category description
        Swal.fire({
            icon: 'warning',
            title: 'Sorry!',
            text: 'Please Select Designation to proceed.'
        });
        return false;
    }
    else if (Employee.trim() == "") {
        // SweetAlert for empty category description
        Swal.fire({
            icon: 'warning',
            title: 'Sorry!',
            text: 'Please Enter Employee to proceed.'
        });
        return false;
    }

    else if (Product == null || Product.trim() == "" ) {
        // SweetAlert for empty category description
        Swal.fire({
            icon: 'warning',
            title: 'Sorry!',
            text: 'Please Enter Product to proceed.'
        });
        return false;
    }
    else if (SpecialPrice == null || SpecialPrice.trim() == "" ) {
        // SweetAlert for empty category description
        Swal.fire({
            icon: 'warning',
            title: 'Sorry!',
            text: 'Please Enter Special Price to proceed.'
        });
        return false;
    }                       

    var hdnDetailsID = $('#hdnDetailsID').val();

    var data = {
        ID: hdnDetailsID,
        branch_ID: Branch,
        Designation: Designation,
        Employee: Employee,
        Product: Product,
        SpecialPrice: SpecialPrice
    }

            $.ajax({
            type: "POST",
            url: "@Url.Action("SaveProductRates", "ProductRates")",
            data: JSON.stringify({ Details: data }), // Fixed JSON formatting
            async: true,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    var Sucess = response.split('~')[0];
                    var DetailsID = response.split('~')[1];                  
                    var Message = response.split('~')[2];
                    $('#hdnDetailsID').val(DetailsID);
                    if (DetailsID > 0) {
                        ProductionID = 0;
                        DetailsID = 0;
                        Swal.fire({
                            title: 'Success!',                         
                            html: 'Product Rates saved successfully.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                if (savemode === "Exit") {
                                    setTimeout(function () {
                                        var url = '/ProductRates/ProductRatesList';
                                        window.location.href = url;
                                    }, 500);
                                }
                            }
                        });
                    }
                    else if (DetailsID ==-1){
                        DetailsID = 0;
                        savemode = "";
                        Swal.fire({
                            title: 'Error!',
                            text: 'Product Rate already exist. Please enter a unique Product rate.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        return false;
                    }
                    else {
                        DetailsID = 0;
                        savemode = "";

                        Swal.fire({
                            title: 'Error!',
                            text: 'Please try again later.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });

                        return false;
                    }
                    Message = "";
                }
            }
        });              
    }

    function CancelAdd() {
        if ($("#hdnAdd").val() == "1") {
            Swal.fire({
                title: 'Are you sure you want to Close with out save data.?',
                text: "This action cannot be undone!",
                imageUrl: '/assests/images/delete-big.png', // Custom icon for confirmation
                imageWidth: 40, // Adjust the width as needed
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/ProductRates/ProductRatesList';

                }
            });
        }
        else {
            window.location.href = '/ProductRates/ProductRatesList';
        }

    }
</script>
<script>

    function EmployeeButnClick(s, e) {
        $('#EmployeeModel').modal('show');
        $("#txtEmployeeSearch").focus();
    }

    function EmployeebtnKeyDown(s, e) {
        if (e.htmlEvent.key == "Enter" || e.code == "NumpadEnter") {
            $('#EmployeeModel').modal('show');
            $("#txtEmployeeSearch").focus();
        }
    }

    function Employeekeydown(e) {

        var OtherDetails = {}
        OtherDetails.SearchKey = $("#txtEmployeeSearch").val();
        OtherDetails.DesignationId = $('#ddlDesignation option:selected').val();
        if ($.trim($("#txtEmployeeSearch").val()) == "" || $.trim($("#txtEmployeeSearch").val()) == null) {
            return false;
        }
        if (e.code == "Enter" || e.code == "NumpadEnter") {
            var HeaderCaption = [];
            HeaderCaption.push("Employee Name");
            HeaderCaption.push("Employee Code");
            if ($("#txtEmployeeSearch").val() != null && $("#txtEmployeeSearch").val() != "") {
                callonServer("../../../Models/MRService.asmx/GetEmployee", OtherDetails, "EmployeeTable", HeaderCaption, "EmployeeIndex", "SetEmployee");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[EmployeeIndex=0]"))
                $("input[EmployeeIndex=0]").focus();
        }
    }

    function SetEmployee(Id, Name) {
        var key = Id;
        if (key != null && key != '') {
            $("#txtEmployee_hidden").val(Id);
            txtEmployee.SetText(Name);
            $('#EmployeeModel').modal('hide');
        }
    }


</script>
<script>
        function AddProductButnClick(s, e) {
            $("#AddProductTable").empty();
            var html = "<table border='1' width='100%' class='dynamicPopupTbl'><tr class='HeaderStyle'><th style='display:none'>id</th><th>Product Code</th><th>Product Name</th></tr></table>";
            $("#AddProductTable").html(html);
            setTimeout(function () { $("#txtAddProdSearch").focus(); }, 500);
            $('#txtAddProdSearch').val('');
            $('#AddProductModel').modal('show');
        }
        function AddProductKeyDown(s, e) {
            if (e.htmlEvent.key == "Enter" || e.htmlEvent.key == "NumpadEnter") {
                //shouldCheck = 0;
                s.OnButtonClick(0);
            }
        }
        function Addprodkeydown(e) {
            var OtherDetails = {}
            if ($.trim($("#txtAddProdSearch").val()) == "" || $.trim($("#txtAddProdSearch").val()) == null) {
                return false;
            }
            OtherDetails.SearchKey = $("#txtAddProdSearch").val();
            if (e.code == "Enter" || e.code == "NumpadEnter") {
                var HeaderCaption = [];
                HeaderCaption.push("Product Code");
                HeaderCaption.push("Product Name");

                if ($("#txtAddProdSearch").val() != '') {
                    callonServer("../../../Models/MRService.asmx/GetProduct", OtherDetails, "AddProductTable", HeaderCaption, "AddProdIndex", "SetProduct");
                }
            }
            else if (e.code == "ArrowDown") {
                if ($("input[AddProdIndex=0]"))
                    $("input[AddProdIndex=0]").focus();
            }
        }
        function SetProduct(Id, Name) {
            if (Id) {
                $('#AddProductModel').modal('hide');
                SetProdNametxt(Id, Name);
            }
        }
        function SetProdNametxt(id, name) {
            txtProductNameAdd.SetText(name);
           // ctxtProductNameAdd.SetText(name);
            $("#HiddenProductID").val(id);
           // document.getElementById('').value = varproductid;

        }
</script>

<div class="breadCumb">
    <span id="HeaderLableID">Product Rates</span>
    <div id="ApprovalCross" onclick="ProductRatesAdd()" class="crossBtnN"><i class="fa fa-times"></i></div>
</div>
<div class="container">
    <div class="form_main backBox p-3 mb-3">
        <div class="row mb-3">


            <div class="col-sm-3  mb-3 h-branch-select">
                <label>Branch<span style="color:red">*</span></label>
                <select id="ddlBranch" class="form-control"></select>
            </div>

            <div class="col-sm-3  mb-3 h-branch-select">
                <label>Designation<span style="color:red">*</span></label>
                <select id="ddlDesignation" class="form-control"></select>
            </div>
            <div class=" col-sm-3 mb-3">
                <label>Employee(s)<span style="color:red">*</span></label>
                @Html.DevExpress().ButtonEdit(
                settings =>
                {
                    settings.Name = "txtEmployee";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.Text = @Model.Employee;
                    settings.ReadOnly = true;
                    settings.Properties.Buttons.Add("...");
                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){EmployeeButnClick(s,e);}";
                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){EmployeebtnKeyDown(s,e);}";

                }).GetHtml()
            </div>
            <div class=" col-sm-3 mb-3">
                <label>Product(s)<span style="color:red">*</span></label>
                @Html.DevExpress().ButtonEdit(
                settings =>
                {
                    settings.Name = "txtProductNameAdd";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.Text = @Model.Employee;
                    settings.ReadOnly = true;
                    settings.Properties.Buttons.Add("...");
                    settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){AddProductButnClick(s,e);}";
                    settings.Properties.ClientSideEvents.KeyDown = "function(s,e){AddProductKeyDown(s,e);}";

                }).GetHtml()
            </div>
            <div class="col-sm-3  mb-3">
                <label>Special Price<span style="color:red">*</span></label>             
                @Html.TextBoxFor(m => m.SpecialPrice, new { @class = "form-control allow_decimal numbersOnly", @id = "txtSpecialPrice", type = "text" })
                @Html.ValidationMessageFor(m => m.SpecialPrice, "", new { @class = "text-danger" })
            </div>
            



            <div class="clear"></div>
            <div class="mt-4 px-4">
                @if (Convert.ToInt16(ViewBag.IsView) == 0)
                {
                    <button type="button" class="btn btn-success  save-btn" onclick="EntrySave('Exit');"><span class="btn-icon"><img src="../../../assests/images/save-instagram.svg"></span> Save and Exit</button>
                }
                <button type="button" class="btn btn-cancel cancel-catg" onclick="CancelAdd()"><span class="btn-icon"><img src="../../../assests/images/cancel.svg"></span> Cancel & Exit</button>

            </div>
        </div>
    </div>

</div>
<input type="hidden" value="" id="hdnAdd" />
<input type="hidden" value="" id="hdnTARGETLEVELID" />
<input type="hidden" value="" id="hdnINTERNALID" />
<input type="hidden" value="" id="hdnLevelGuiIDS" />
<input type="hidden" value="@Model.ID" id="hdnDetailsID" />
<input type="hidden" value="" id="txtEmployee_hidden" />
<input type="hidden" value="" id="HiddenProductID" />

<div class="modal fade pmsModal w80 " id="EmployeeModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Employee Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="Employeekeydown(event)" id="txtEmployeeSearch" class="form-control" autofocus width="100%" placeholder="Search By Employee Code" />

                <div id="EmployeeTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Employee Name</th>
                            <th>Employee Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSaveEmployee" class="btnOkformultiselection btn btn-success" data-dismiss="modal" onclick="OKPopup('EmployeeSource')">OK</button>
               
                <button type="button" class="btn btn-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="AddProductModel" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Product Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="Addprodkeydown(event)" id="txtAddProdSearch" class="form-control" autofocus width="100%" placeholder="Search By Product Name or Description" />

                <div id="AddProductTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Product Code</th>
                            <th>Product Name</th>

                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnAddSaveProduct" class="btnOkformultiselection btn btn-success" data-dismiss="modal" onclick="OKPopup('ProductSource')">OK</button>

                <button type="button" class="btn btn-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
