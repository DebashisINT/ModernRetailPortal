@*====================================================== Revision History ==========================================================*@
@*Rev Number         DATE              VERSION          DEVELOPER           CHANGES*@
@*1.0                13-02-2023        2.0.39           Pallab              25656: Master module design modification *@
@*====================================================== Revision History ==========================================================*@

@model ModernRetail.Models.WarehouseMasterModel
@{
    ViewBag.Title = "Warehouse Master";
}
<link href="~/Content/media.css" rel="stylesheet" />

<style>
    .modal-header {
        padding: 8px;
        background: #094e8c;
        border-radius: 8px 8px 0 0;
    }

    .btn-export {
        background: #e17134;
        color: #fff;
    }

        .btn-export:hover {
            background: #a24716 !important;
            color: #fff;
        }

    button.close {
        color: #fff;
        font-weight: 300;
        opacity: .5;
    }

    .close:hover, .close:focus {
        color: #fff;
        opacity: 1;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-footer {
        padding: 15px 10px 15px;
        border-top: 1px solid #c0c0c0;
    }

    .dxgvLoadingPanel_PlasticBlue {
        left: 42% !important;
    }
    /*Rev 2.0*/
    #gridUserList {
        width: 100% !important;
        max-width: 100% !important;
    }
    /*Rev end 2.0*/

    /*Rev 3.0*/

    #BranchGridLookup {
        min-height: 34px;
        border-radius: 5px;
    }

    .dxeButtonEditButton_PlasticBlue {
        background: #094e8c !important;
        border-radius: 4px !important;
        padding: 0 4px !important;
    }

    .chosen-container-single .chosen-single div {
        background: #094e8c;
        color: #fff;
        border-radius: 4px;
        height: 30px;
        top: 1px;
        right: 1px;
        /*position:relative;*/
    }

        .chosen-container-single .chosen-single div b {
            display: none;
        }

        .chosen-container-single .chosen-single div::after {
            content: '<';
            position: absolute;
            top: 2px;
            right: 3px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
        }

    .chosen-container-active.chosen-with-drop .chosen-single div {
        background: #094e8c;
        color: #fff;
    }

        .chosen-container-active.chosen-with-drop .chosen-single div::after {
            transform: rotate(90deg);
            right: 5px;
        }

    .calendar-icon {
        position: absolute;
        bottom: 8px;
        right: 14px;
        z-index: 0;
        cursor: pointer;
    }

    .date-select .form-control {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #ddlState, #ddlPartyType, #divoutletStatus, #slmonth, #slyear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .h-branch-select {
        position: relative;
        background: #fff;
    }

        .h-branch-select::after {
            content: '<';
            position: absolute;
            top: 8px;
            right: -2px;
            font-size: 18px;
            transform: rotate(269deg);
            font-weight: 500;
            background: #094e8c;
            color: #fff;
            height: 18px;
            display: block;
            width: 28px;
            /* padding: 10px 0; */
            border-radius: 4px;
            text-align: center;
            line-height: 19px;
            z-index: 0;
        }

    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .multiselect.dropdown-toggle, #ddlMonth, #ddlYear {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .whclass.selectH {
        padding-right: 30px;
    }

    #ddlShowReport:focus-visible {
        box-shadow: none;
        outline: none;
        border: 1px solid #164f93;
    }

    #ddlShowReport:focus {
        border: 1px solid #164f93;
    }

    .whclass.selectH:focus-visible {
        outline: none;
    }

    .whclass.selectH:focus {
        border: 1px solid #164f93;
    }

    .dxeButtonEdit_PlasticBlue {
        border: 1px Solid #ccc;
    }

    .chosen-container-single .chosen-single {
        border: 1px solid #ccc;
        background: #fff;
        box-shadow: none;
    }

    .daterangepicker td.active, .daterangepicker td.active:hover {
        background-color: #175396;
    }

    label {
        font-weight: 500;
    }

    .dxgvHeader_PlasticBlue {
        background: #164f94;
    }

    .dxgvSelectedRow_PlasticBlue td.dxgv {
        color: #fff;
    }

    .dxeCalendarHeader_PlasticBlue {
        background: #185598;
    }

    .dxgvControl_PlasticBlue, .dxgvDisabled_PlasticBlue,
    .dxbButton_PlasticBlue,
    .dxeCalendar_PlasticBlue,
    .dxeEditArea_PlasticBlue {
        font-family: 'Poppins', sans-serif !important;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        font-weight: 500;
    }

    .btnPadding .btn {
        padding: 7px 14px !important;
        border-radius: 4px;
    }

    .btnPadding {
        padding-top: 24px !important;
    }

    .dxeButtonEdit_PlasticBlue {
        border-radius: 5px;
        height: 34px;
    }

    #dtFrom, #dtTo {
        position: relative;
        z-index: 1;
        background: transparent;
    }

    #tblshoplist_wrapper .dataTables_scrollHeadInner table tr th {
        background: #165092;
        vertical-align: middle;
        font-weight: 500;
    }

    /*#refreshgrid {
                background: #e5e5e5;
                padding: 0 10px;
                margin-top: 15px;
                border-radius: 8px;
            }*/

    .styled-checkbox {
        position: absolute;
        opacity: 0;
        z-index: 1;
    }

        .styled-checkbox + label {
            position: relative;
            /*cursor: pointer;*/
            padding: 0;
            margin-bottom: 0 !important;
        }

            .styled-checkbox + label:before {
                content: "";
                margin-right: 6px;
                display: inline-block;
                vertical-align: text-top;
                width: 16px;
                height: 16px;
                /*background: #d7d7d7;*/
                margin-top: 2px;
                border-radius: 2px;
                border: 1px solid #c5c5c5;
            }

        .styled-checkbox:hover + label:before {
            background: #094e8c;
        }


        .styled-checkbox:checked + label:before {
            background: #094e8c;
        }

        .styled-checkbox:disabled + label {
            color: #b8b8b8;
            cursor: auto;
        }

            .styled-checkbox:disabled + label:before {
                box-shadow: none;
                background: #ddd;
            }

        .styled-checkbox:checked + label:after {
            content: "";
            position: absolute;
            left: 3px;
            top: 9px;
            background: white;
            width: 2px;
            height: 2px;
            box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white, 4px -6px 0 white, 4px -8px 0 white;
            transform: rotate(45deg);
        }

    #dtstate {
        padding-right: 8px;
    }

    .pmsModal .modal-header {
        /*background: #094e8c !important;
        background-image: none !important;*/
        padding: 11px 20px;
        border: none;
        border-radius: 15px 15px 0 0 !important;
        /*color: #fff;*/
        /*background: linear-gradient(to right, #1f5fbf, #11998e) !important;*/
    }

    .pmsModal .modal-content {
        border: none;
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    /*.pmsModal .modal-header .modal-title {
            font-size: 14px;
        }*/

    .pmsModal .modal-header .modal-title {
        font-size: 16px !important;
        color: #111;
        font-size: 24px;
    }

    .pmsModal .modal-header {
        background: transparent !important;
        margin-bottom: 10px;
        border-bottom: 1px solid #d5d5d5;
    }

    .close {
        font-size: 34px;
        opacity: .8;
    }

    button.close {
        color: #111 !important;
        font-weight: 400 !important;
        opacity: .8 !important;
        font-size: 32px !important;
    }

    .pmsModal .close {
        font-weight: 400;
        font-size: 25px;
        color: #fff;
        text-shadow: none;
        opacity: .5;
    }

    #EmployeeTable {
        margin-top: 10px;
    }

        #EmployeeTable table tr th {
            padding: 5px 10px;
        }

    .dynamicPopupTbl {
        font-family: 'Poppins', sans-serif !important;
    }

        .dynamicPopupTbl > tbody > tr > td,
        #EmployeeTable table tr th {
            font-family: 'Poppins', sans-serif !important;
            font-size: 12px;
        }

    .w150 {
        width: 160px;
    }

    .eqpadtbl > tbody > tr > td:not(:last-child) {
        padding-right: 20px;
    }

    #dtFrom_B-1, #dtTo_B-1 {
        background: transparent !important;
        border: none;
        width: 30px;
        padding: 10px !important;
    }

        #dtFrom_B-1 #dtFrom_B-1Img,
        #dtTo_B-1 #dtTo_B-1Img {
            display: none;
        }

    #dtFrom_I, #dtTo_I {
        background: transparent;
    }

    .for-cust-icon {
        position: relative;
        z-index: 1;
    }

    .pad-md-18 {
        padding-top: 24px;
    }

    .open .dropdown-toggle.btn-default {
        background: transparent !important;
    }

    .input-group-btn .multiselect-clear-filter {
        height: 32px;
        border-radius: 0 4px 4px 0;
    }

    .btn .caret {
        display: none;
    }

    .iminentSpan button.multiselect.dropdown-toggle {
        height: 34px;
    }

    .col-lg-2 {
        padding-left: 8px;
        padding-right: 8px;
    }

    select:not(.btn) {
        -webkit-appearance: none;
        position: relative;
        z-index: 1;
        background-color: transparent;
    }

    .dxgvControl_PlasticBlue a {
        margin: 0 3px;
    }

    .dxeButtonDisabled_PlasticBlue {
        background: #ababab !important;
    }

    .red {
        color: red;
    }

    .linerHd {
        background: #4e8fcf !important;
    }

    /*Rev end 3.0*/
    /*Rev 4.0*/
    #popup_message {
        padding-left: 0 !important;
        text-align: center !important;
    }

    #popup_panel {
        margin: 14px 0 5px;
    }

    #popup_ok, #popup_cancel {
        border-radius: 4px !important;
    }
    /*Rev end 4.0*/
    /*Rev 5.0*/
    #gridUserList_DXPagerTop_PSP, #gridUserList_DXPagerBottom_PSP {
        right: 36px !important;
        left: auto !important;
    }
    /*Rev end 5.0*/


    .add-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
    }

    .add-btn {
        transition: all .4s;
    }

        .add-btn:hover {
            color: #fff;
            background-color: #0e4f23;
            border-color: #0e4f23;
        }

        .add-btn .btn-icon i {
            color: #238945;
        }

    .add-btn {
        background-color: #238945;
        margin-right: 5px;
    }

    .btn {
        border-radius: 8px;
        height: 38px;
        padding-left: 12px;
        padding-right: 12px;
        color: #fff;
    }

        .btn:active, .btn:hover, .btn:focus {
            color: #fff !important;
        }

    .buttons-alignment {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .show-btn .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 21px;
        margin-right: 5px;
        color: #054682;
    }

    .show-btn {
        background: #054682;
        transition: all .4s;
        margin-right: 5px;
    }

    .btn-cancel {
        background-color: #DC0505;
        color: #fff;
    }

    .swal2-html-container {
        margin-top: 5px !important;
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
        width: 90px !important;
        border-radius: 8px !important;
    }

    div:where(.swal2-container).swal2-backdrop-show, div:where(.swal2-container).swal2-noanimation {
        background: rgb(0 0 0 / 50%) !important;
    }

    div:where(.swal2-container).swal2-center > .swal2-popup {
        background: linear-gradient(1deg, #cff3ff, #ffffff);
    }

    .swal2-confirm.swal2-styled {
        border-radius: 8px !important;
    }

    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        /*width: 140px;*/
        background-color: #0d8f24;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 42%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
        word-break: keep-all;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #0d8f24 transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        overflow: visible;
    }

    #btnSave .btn-icon, .cancel-catg .btn-icon {
        border-radius: 50px;
        width: 21px;
        height: 21px;
        display: inline-block;
        background: #fff;
        line-height: 20px;
        margin-right: 5px;
    }

        #btnSave .btn-icon img {
            color: #238945;
            width: 14px;
        }

        .cancel-catg .btn-icon img {
            color: #DC0505;
            width: 16px;
        }

    .cancel-catg:hover {
        transform: scale(1.1);
    }

    .cancel-catg, #btnSave {
        transition: all .3s ease-in-out;
    }

        #btnSave:hover {
            transform: scale(1.1);
        }

    .cancel-catg {
        margin-right: 5px;
    }


    /*Rev Pallab: grid modification*/

    .dxgvEditFormDisplayRow_PlasticBlue td.dxgv, .dxgvDataRow_PlasticBlue td.dxgv, .dxgvDataRowAlt_PlasticBlue td.dxgv, .dxgvSelectedRow_PlasticBlue td.dxgv, .dxgvFocusedRow_PlasticBlue td.dxgv {
        /*overflow: hidden;*/
        word-break: break-word;
    }

    .rowActive {
        background-color: #ebf4ff !important;
        color: #000 !important;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: none; /* Initially hidden */
    }

    .flex-loader {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        width: 100%;
        height: 100%;
    }

    .dxgvLoadingPanel_PlasticBlue {
        display: none !important;
    }

    .flex-loader img {
        width: 120px;
    }

    .flex-loader h4 {
        font-size: 22px;
        color: #000000;
    }

    .btn-export {
        background: #d0d0d0;
    }

        .btn-export .btn-icon img {
            width: 30px;
            height: 30px;
        }


    input:focus, textarea:focus, select:focus {
        outline: none;
    }

    .select2-container {
        width: 100% !important;
        z-index: 99999;
    }

    .select2-container--default .select2-selection--single {
        height: 34px;
        /* padding: 6px 12px; */
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    /*.select2-container {
        z-index: 1;
    }*/

    .select2-container--default .select2-selection--single {
        background-color: transparent;
    }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            display: none;
        }

    .select2-container--default .select2-search--dropdown .select2-search__field {
        border-radius: 4px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 32px;
        padding-right: 22px;
    }
    /*Rev End Pallab: grid modification*/
</style>
<script>
    $(document).ready(function () {
        $('#txtWarehouse').focus();
        $("#divPage").addClass("hidden");

        @*$('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportWarehouselist", "WarehouseMaster", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);
            }
        });*@


        $('#ddlAppIds').on('click', function () {
            var selectedValue = "1"; // XLSX export value
            var desg = $("#drpdesignation").val();
            var usrtype = $("#ddlusertypes").val();
            var url = '@Url.Action("ExportWarehouselist", "WarehouseMaster", new { type = "_type_" })';
            window.location.href = url.replace("_type_", selectedValue);
        });

        $("#txtContactPhone").keypress(function (e) {
            //if the letter is not digit then display error and don't type anything
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                //display error message
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
    });

    function CoutryChange() {
        $.ajax({
            type: "post",
            url: "@Url.Action("SatetListView", "WarehouseMaster")",
            data: { countryID: $('#ddlCountry').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var status = "<select id='ddlState' onchange=StateChage() class = 'full form-control'>";
                status = status + '<option value="0">select</option>';
                for (var i = 0; i < data.length; i++) {
                    status = status + '<option value=' + data[i].ID + '>' + data[i].Name + '</option>';
                }
                status = status + '</select>';
                $('#divState').html(status);
            }
        });
    }

    function StateChage() {
        $.ajax({
            type: "post",
            url: "@Url.Action("CityListView", "WarehouseMaster")",
            data: { StateID: $('#ddlState').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var status = "<select id='ddlCityDistrict' class = 'full form-control'>";
                status = status + '<option value="0">select</option>';
                for (var i = 0; i < data.length; i++) {
                    status = status + '<option value=' + data[i].city_id + '>' + data[i].city_name + '</option>';
                }
                status = status + '</select>';
                $('#divCity').html(status);
            }
        });
        ShopGridLookup.gridView.Refresh();
        ShopGridLookup.gridView.Refresh();
    }

    function SaveWareHouse() {
        var falgs = true;
        if ($('#txtWarehouse').val() == "") {
            //jAlert("Enter Warehouse Name.");
            jAlert("Enter Warehouse Name.", "alert", function () {
                $('#txtWarehouse').focus();
            });



            falgs = false;
        }
        else if ($('#txtAddress1').val() == "") {
            //jAlert("Enter Address.");
            jAlert("Enter Address.", "alert", function () {
                $('#txtAddress1').focus();
            });
            falgs = false;
        }
        else if ($('#ddlCountry').val() == "" || $('#ddlCountry').val() == "0") {
            //jAlert("Select Country.");
            jAlert("Select Country.", "alert", function () {
                $('#ddlCountry').focus();
            });
            falgs = false;
        }
        else if ($('#ddlState').val() == "" || $('#ddlState').val() == "0") {
            //jAlert("Select State.");
            jAlert("Select State.", "alert", function () {
                $('#ddlState').focus();
            });
            falgs = false;
        }
        else if ($('#ddlCityDistrict').val() == "" || $('#ddlCityDistrict').val() == "0") {
            //jAlert("Select City/District.");
            jAlert("Select City/District.", "alert", function () {
                $('#ddlCityDistrict').focus();
            });
            falgs = false;
        }
        else if ($('#txtPin').val() == "") {
            //jAlert("Enter Pin.");
            jAlert("Enter Pin.", "alert", function () {
                $('#txtPin').focus();
            });
            falgs = false;
        }
        else if ($('#txtContactName').val() == "") {
            //jAlert("Enter Contact Person Name.");
            jAlert("Enter Contact Person Name.", "alert", function () {
                $('#txtContactName').focus();
            });
            falgs = false;
        }
        else if ($('#txtContactPhone').val() == "") {
            //jAlert("Enter Contact Person Phone.");
            jAlert("Enter Contact Person Phone.", "alert", function () {
                $('#txtContactPhone').focus();
            });
            falgs = false;
        }
        else if (ShopId=="") {
            jAlert("Select distributor.", "alert", function () {

            });
            falgs = false;
        }

        //if ($('#ddlDistributer').val() == "" || $('#ddlDistributer').val() == "0") {
        //    jAlert("Enter Contact Person Phone.");
        //    $('#ddlDistributer').focus();
        //}

        var isdefault = "0";
        if (document.getElementById("chkDefault").checked == true) {
            isdefault = "1";
        }

        var action = "";
        if ($("#WareHouse_ID").val() != "") {
            action = "EDIT";
        }
        else {
            action = "INSERT";
        }

        if (falgs) {
            $.ajax({
                type: "post",
                url: "@Url.Action("AddWarehouseMaster", "WarehouseMaster")",
                data: {
                    action: action, WareHouse_ID: $("#WareHouse_ID").val(), warehouseName: $('#txtWarehouse').val(), address1: $('#txtAddress1').val(), address2: $('#txtAddress2').val(), address3: $('#txtAddress3').val(), country: $('#ddlCountry').val(),
                    State: $('#ddlState').val(), City: $('#ddlCityDistrict').val(), Pin: $('#txtPin').val(), contactPerson: $('#txtContactName').val(), ContactPhone: $('#txtContactPhone').val(), Distributor: ShopId,
                    defaultvalue: isdefault
                },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    if (data == "Ware house added successfully.") {
                        jAlert(data);
                        Clear();
                        gridWareHouseList.Refresh();
                        gridWareHouseList.Refresh();
                        $("#divPage").addClass("hidden");
                        $("#divGrid").removeClass("hidden");
                    }
                    else if (data == "Ware house updated successfully.") {
                        jAlert(data);
                        Clear();
                        gridWareHouseList.Refresh();
                        gridWareHouseList.Refresh();
                        $("#divPage").addClass("hidden");
                        $("#divGrid").removeClass("hidden");
                    }
                    else {
                        jAlert(data);
                    }
                }
            });
        }
    }

    function OnStartCallback(s, e) {
        e.customArgs["Is_PageLoad"] = "";
    }

    function NewWareHouse() {
        $("#divPage").removeClass("hidden");
        $("#divGrid").addClass("hidden");
    }

    function Cancel() {
        $("#divPage").addClass("hidden");
        $("#divGrid").removeClass("hidden");
        Clear();
    }

    function CoutryChangePopulate(Value, Country) {
        $.ajax({
            type: "post",
            url: "@Url.Action("SatetListView", "WarehouseMaster")",
            data: { countryID: Country },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var status = "<select id='ddlState' onchange=StateChage() class = 'full form-control'>";
                status = status + '<option value="0">select</option>';
                for (var i = 0; i < data.length; i++) {
                    status = status + '<option value=' + data[i].ID + '>' + data[i].Name + '</option>';
                }
                status = status + '</select>';
                $('#divState').html(status);
            }
        });
        $("#ddlState").val(Value);
    }

    function StateChagePopulate(value, State) {
        $.ajax({
            type: "post",
            url: "@Url.Action("CityListView", "WarehouseMaster")",
            data: { StateID: State },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var status = "<select id='ddlCityDistrict' class = 'full form-control'>";
                status = status + '<option value="0">select</option>';
                for (var i = 0; i < data.length; i++) {
                    status = status + '<option value=' + data[i].city_id + '>' + data[i].city_name + '</option>';
                }
                status = status + '</select>';
                $('#divCity').html(status);
            }

        });
        $("#ddlCityDistrict").val(value);
    }

    function OpenWarehouseEdit(obj) {
        //alert(obj);
        $("#WareHouse_ID").val(obj);
        $.ajax({
            type: "POST",
            url: "@Url.Action("WareHouseView", "WarehouseMaster")",
            data: { WareHouse_ID: obj },
            dataType: "json",
            success: function (response) {
                var status = response;
                var str = "";

                if (status != null) {
                    CoutryChangePopulate(status.State, status.Country);

                    $('#txtWarehouse').val(status.WarehouseName);
                    $('#txtAddress1').val(status.Address1);
                    $('#txtAddress2').val(status.Address2);
                    $('#txtAddress3').val(status.Address3);
                    $('#ddlCountry').val(status.Country);


                    $('#txtPin').val(status.Pin);
                    $('#txtContactName').val(status.ContactName);
                    $('#txtContactPhone').val(status.ContactPhone);
                    // $('#ddlDistributer').val(status.Distributer).change();

                    if (status.isDefault == "True") {
                        document.getElementById("chkDefault").checked = true;
                    }
                    else {
                        document.getElementById("chkDefault").checked = false;
                    }

                    setTimeout(function () {
                        $('#ddlState').val(status.State).change();
                        setTimeout(function () {
                            $('#ddlCityDistrict').val(status.CityDistrict).change();
                        }, 600);
                    }, 600);
                    StateChagePopulate(status.CityDistrict, status.State);


                    // $("#btnSave").addClass('hide');
                    $("#divPage").removeClass("hidden");
                    $("#divGrid").addClass("hidden");
                }

            },
            error: function (response) {
                // alert(response);
                jAlert("Please try again later.");
            }
        });
    }

    function Clear() {
        $("#WareHouse_ID").val("");
        $('#txtWarehouse').val("");
        $('#txtAddress1').val("");
        $('#txtAddress2').val("");
        $('#txtAddress3').val("");
        $('#ddlCountry').val(0);
        CoutryChange();
        $('#ddlState').val(0).change();
        StateChage();

        $('#txtPin').val("");
        $('#txtContactName').val("");
        $('#txtContactPhone').val("");
        $('#ddlDistributer').val(0).change();
        $('#ddlCityDistrict').val(0).change();
        document.getElementById("chkDefault").checked = false;
    }

    function WarehouseDeleet(obj) {
        jConfirm('Confirm Delete?', 'Alert', function (r) {
            if (r) {
                $("#WareHouse_ID").val(obj);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("WareHouseDelete", "WarehouseMaster")",
                    data: { WareHouse_ID: obj },
                    dataType: "json",
                    success: function (response) {
                        var status = response;
                        jAlert(status);
                        gridWareHouseList.Refresh();
                        gridWareHouseList.Refresh();
                    },
                    error: function (response) {
                        //  alert(response);
                        jAlert("Please try again later.");
                    }
                });
            }
            else {
                // alert("false");
            }
        });
    }

    function WarehousePermission(obj) {

        //  $("#hdnorder").val(orderid);
        $("#myModal").modal('show');
        //  Clearall();
        //  gridProductlist.Refresh();
    }

    function OpenShopList() {
        gridWareHouseShopList.Refresh();
    }

    function OnShopStartCallback() {

    }

    function ShopStartCallback(s, e) {
        e.customArgs["StateId"] = $('#ddlState').val();
    }

    var ShopId = [];
    function ShopSelectionChanged(s, e) {
        ShopGridLookup.gridView.GetSelectedFieldValues("ID", GetShopSelectedFieldValuesCallback);
    }
    function GetShopSelectedFieldValuesCallback(values) {
        try {
            ShopId = [];
            for (var i = 0; i < values.length; i++) {
                ShopId.push(values[i]);
            }
        } finally {
            console.log(ShopId);
        }
    }

    function LookupShopValChange() {
        ShopGridLookup.GetGridView().Refresh()
    }
</script>


<script src="~/Scripts/chosen/chosen.jquery.min.js"></script>


<link href="~/Scripts/chosen/chosen.min.css" rel="stylesheet" />
<input type="hidden" id="WareHouse_ID" />
<div id="divPage" class="hidden">
    <div class="breadCumb">
        <span>
            Warehouse Master
        </span>
    </div>

    <div class="container">
        <div class="backBox mt-5 p-3 ">
            <div class="form-group">
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Name <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.WarehouseName, new { @class = "form-control", @id = "txtWarehouse" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Address 1 <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.Address1, new { @class = "form-control", @id = "txtAddress1" })
                    </div>
                    <div class="col-md-4">
                        <label>Address 2 </label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control", @id = "txtAddress2" })
                    </div>
                    <div class="col-md-4">
                        <label>Address 3 </label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.Address3, new { @class = "form-control", @id = "txtAddress3" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-2 h-branch-select">
                        <label>Country <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.DropDownList("ddlCountry", new SelectList(Model.Country_List, "cou_id", "cou_country"), new { @name = "from", @class = "full form-control", @Onchange = "CoutryChange()" })
                    </div>
                    <div class="col-md-2 h-branch-select">
                        <label>State <span style="color:red">*</span></label>
                        <div id="divState">
                            @*<input type="text" class="form-control" />*@
                            @Html.DropDownList("ddlState", new SelectList(Model.State_List, "id", "state"), new { @name = "from", @class = "full form-control" })
                        </div>
                    </div>

                    <div class="col-md-2  h-branch-select">
                        <label>City/District <span style="color:red">*</span></label>
                        <div id="divCity">
                            @*<input type="text" class="form-control" />*@
                            @Html.DropDownList("ddlCityDistrict", new SelectList(Model.CityDistrict_List, "city_id", "city_name"), new { @name = "from", @class = "full form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label>Pin <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.Pin, new { @class = "form-control", @id = "txtPin" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Contact Person Name <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.ContactName, new { @class = "form-control", @id = "txtContactName" })
                    </div>

                    <div class="col-md-2">
                        <label>Contact Person Phone <span style="color:red">*</span></label>
                        @*<input type="text" class="form-control" />*@
                        @Html.TextBoxFor(m => m.ContactPhone, new { @class = "form-control", @id = "txtContactPhone" })
                    </div>
                    <div class="col-md-2">
                        <label>Distributor <span style="color:red">*</span></label>
                        @Html.Action("GetShopList", "WarehouseMaster")
                    </div>
                    <div class="col-md-2 hidden">
                        <label>&nbsp; </label>
                        <input type="checkbox" id="chkDefault" class="hidden" /> Is Default
                    </div>
                </div>
                <div class="row mx-1">
                    <label>&nbsp;</label>
                    <button type="button" id="btnSave" class="btn btn-success save-btn" onclick="SaveWareHouse()"><span class="btn-icon"><img src="../../../assests/images/save-instagram.svg"></span>Save and Exit</button>
                    <button type="button" class="btn btn-cancel cancel-catg" onclick="Cancel()"><span class="btn-icon"><img src="../../../assests/images/cancel.svg"></span> Cancel & Exit</button>

                </div>

                <div class="row">

                </div>
            </div>
        </div>
    </div>
</div>
<div id="divGrid">
    <div class="breadCumb">
        <span>
            Warehouse Master List
        </span>
    </div>


    <div class="container">
        <div class="backBox mt-5 p-3 ">
            <div class="form-group mb-4">
                @*<button id="btnNew" class="btn btn-success mr-2 mb-3" onclick="NewWareHouse()">Add New</button>*@
                <button type="button" id="btnNew" class="btn add-btn" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" onclick="NewWareHouse();">
                    <span class="btn-icon"><i class="fa fa-plus"></i></span> Add New
                </button>

                @*<select name="ddlAppIds" class="btn btn-primary btn-radius mb-3" id="ddlAppIds">
                        <option value="0">Export to</option>
                        <option value="1">PDF</option>
                        <option value="2">XLSX</option>
                        <option value="3">XLS</option>
                        <option value="4">RTF</option>
                        <option value="5">CSV</option>

                    </select>*@

                <button type="button" name="ddlAppIds" id="ddlAppIds" class="btn btn-sm btn-export tooltip-container">
                    <span class="btn-icon"><img src="/assests/images/excel.png" /></span>
                    <div class="tooltip">Export to XLSX</div>
                </button>

                <div class="overflow-x-auto">
                    @{
                        Html.RenderAction("WarehouseMasterGrid", "WarehouseMaster", new { Is_PageLoad = "Ispageload" });
                    }
                </div>
            </div>
        </div>
    </div>
</div>

